{"input":{"location":{"$mid":1,"fsPath":"/workspace/.vscode-remote/extensions/extensions.json","external":"file:///workspace/.vscode-remote/extensions/extensions.json","path":"/workspace/.vscode-remote/extensions/extensions.json","scheme":"file"},"mtime":1719174186352,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.90.2","productDate":"2024-06-20T12:09:01.178Z","productCommit":"dc0e7217f8f11d3249dcd2cd1d2152a2fdb45f3e","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"github.vscode-pull-request-github","uuid":"69ddd764-339a-4ecc-97c1-9c4ece58e36d"},"manifest":{"name":"vscode-pull-request-github","displayName":"GitHub Pull Requests","description":"Pull Request and Issue Provider for GitHub","icon":"resources/icons/github_logo.png","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-pull-request-github"},"bugs":{"url":"https://github.com/Microsoft/vscode-pull-request-github/issues"},"enabledApiProposals":["activeComment","codiconDecoration","codeActionRanges","commentingRangeHint","commentReactor","commentThreadApplicability","contribAccessibilityHelpContent","contribCommentEditorActionsMenu","contribCommentPeekContext","contribCommentThreadAdditionalMenu","contribCommentsViewThreadMenus","contribEditorContentMenu","contribShareMenu","diffCommand","fileComments","quickDiffProvider","shareProvider","tabInputTextMerge","tokenInformation","treeViewMarkdownMessage"],"version":"0.90.0","publisher":"GitHub","engines":{"vscode":"^1.90.0"},"categories":["Other"],"extensionDependencies":["vscode.github-authentication"],"activationEvents":["onStartupFinished","onFileSystem:newIssue","onFileSystem:pr","onFileSystem:githubpr","onFileSystem:review"],"browser":"./dist/browser/extension","l10n":"./dist/browser/extension","main":"./dist/extension","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"configuration":{"type":"object","title":"GitHub Pull Requests","properties":{"githubPullRequests.pullRequestTitle":{"deprecationMessage":"The pull request title now uses the same defaults as GitHub, and can be edited before create.","type":"string","enum":["commit","branch","custom","ask"],"enumDescriptions":["Use the latest commit message","Use the branch name","Specify a custom title","Ask which of the above methods to use"],"default":"ask","description":"The title used when creating pull requests."},"githubPullRequests.pullRequestDescription":{"type":"string","enum":["template","commit","none","Copilot"],"enumDescriptions":["Use a pull request template and commit description, or just use the commit description if no templates were found","Use the latest commit message only","Do not have a default description","Generate a pull request title and description from GitHub Copilot. Requires that the GitHub Copilot extension is installed and authenticated. Will fall back to `commit` if Copilot is not set up."],"default":"template","description":"The description used when creating pull requests."},"githubPullRequests.defaultCreateOption":{"type":"string","enum":["lastUsed","create","createDraft","createAutoMerge"],"markdownEnumDescriptions":["The most recently used create option.","The pull request will be created.","The pull request will be created as a draft.","The pull request will be created with auto-merge enabled. The merge method selected will be the default for the repo or the value of `githubPullRequests.defaultMergeMethod` if set."],"default":"lastUsed","description":"The create option that the \"Create\" button will default to when creating a pull request."},"githubPullRequests.createDraft":{"type":"boolean","default":false,"deprecationMessage":"Use the setting 'githubPullRequests.defaultCreateOption' instead.","description":"Whether the \"Draft\" checkbox will be checked by default when creating a pull request."},"githubPullRequests.logLevel":{"type":"string","enum":["info","debug","off"],"default":"info","description":"Logging for GitHub Pull Request extension. The log is emitted to the output channel named as GitHub Pull Request.","markdownDeprecationMessage":"Log level is now controlled by the [Developer: Set Log Level...](command:workbench.action.setLogLevel) command. You can set the log level for the current session and also the default log level from there."},"githubPullRequests.remotes":{"type":"array","default":["origin","upstream"],"items":{"type":"string"},"markdownDescription":"List of remotes, by name, to fetch pull requests from."},"githubPullRequests.includeRemotes":{"type":"string","enum":["default","all"],"default":"default","deprecationMessage":"The setting `githubPullRequests.includeRemotes` has been deprecated. Use `githubPullRequests.remotes` to configure what remotes are shown.","description":"By default we only support remotes created by users. If you want to see pull requests from remotes this extension created for pull requests, change this setting to 'all'."},"githubPullRequests.queries":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The label to display for the query in the Pull Requests tree"},"query":{"type":"string","description":"The query used for searching pull requests."}}},"scope":"resource","markdownDescription":"Specifies what queries should be used in the GitHub Pull Requests tree. All queries are made against **the currently opened repos**. Each query object has a `label` that will be shown in the tree and a search `query` using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax). The variable `${user}` can be used to specify the logged in user within a search. By default these queries define the categories \"Waiting For My Review\", \"Assigned To Me\" and \"Created By Me\". If you want to preserve these, make sure they are still in the array when you modify the setting.","default":[{"label":"Waiting For My Review","query":"is:open review-requested:${user}"},{"label":"Assigned To Me","query":"is:open assignee:${user}"},{"label":"Created By Me","query":"is:open author:${user}"}]},"githubPullRequests.labelCreated":{"type":"array","items":{"type":"string","description":"Each string element is value of label that you want to add"},"default":[],"description":"Group of labels that you want to add to the pull request automatically. Labels that don't exist in the repository won't be added."},"githubPullRequests.defaultMergeMethod":{"type":"string","enum":["merge","squash","rebase"],"default":"merge","description":"The method to use when merging pull requests."},"githubPullRequests.showInSCM":{"type":"boolean","default":false,"deprecationMessage":"This setting is deprecated. Views can now be dragged to any location.","description":"When true, show GitHub Pull Requests within the SCM viewlet. Otherwise show a separate view container for them."},"githubPullRequests.notifications":{"type":"string","enum":["pullRequests","off"],"default":"off","description":"If GitHub notifications should be shown to the user."},"githubPullRequests.fileListLayout":{"type":"string","enum":["flat","tree"],"default":"tree","description":"The layout to use when displaying changed files list."},"githubPullRequests.defaultDeletionMethod.selectLocalBranch":{"type":"boolean","default":true,"description":"When true, the option to delete the local branch will be selected by default when deleting a branch from a pull request."},"githubPullRequests.defaultDeletionMethod.selectRemote":{"type":"boolean","default":true,"description":"When true, the option to delete the remote will be selected by default when deleting a branch from a pull request."},"githubPullRequests.terminalLinksHandler":{"type":"string","enum":["github","vscode","ask"],"enumDescriptions":["Create the pull request on GitHub","Create the pull request in VS Code","Ask which method to use"],"default":"ask","description":"Default handler for terminal links."},"githubPullRequests.createOnPublishBranch":{"type":"string","enum":["never","ask"],"enumDescriptions":["Never create a pull request when a branch is published.","Ask if you want to create a pull request when a branch is published."],"default":"ask","description":"Create a pull request when a branch is published."},"githubPullRequests.commentExpandState":{"type":"string","enum":["expandUnresolved","collapseAll"],"enumDescriptions":["All unresolved comments will be expanded.","All comments will be collapsed"],"default":"expandUnresolved","description":"Controls whether comments are expanded when a document with comments is opened."},"githubPullRequests.useReviewMode":{"description":"Choose which pull request states will use review mode. \"Open\" pull requests will always use review mode. Setting to \"auto\" will use review mode for open, closed, and merged pull requests in web, but only open pull requests on desktop.","oneOf":[{"type":"object","additionalProperties":false,"properties":{"merged":{"type":"boolean","description":"Use review mode for merged pull requests.","default":false},"closed":{"type":"boolean","description":"Use review mode for closed pull requests. Merged pull requests are not considered \"closed\".","default":false}},"required":["merged","closed"]},{"type":"string","enum":["auto"]}],"default":"auto"},"githubPullRequests.assignCreated":{"type":"string","description":"All pull requests created with this extension will be assigned to this user. To assign to yourself, use the '${user}' variable."},"githubPullRequests.pushBranch":{"type":"string","enum":["prompt","always"],"default":"prompt","enumDescriptions":["Prompt to push the branch when creating a PR and the \"from\" branch is not available on the remote.","Always push the branch when creating a PR and the \"from\" branch is not available on the remote."],"description":"Push the \"from\" branch when creating a PR and the \"from\" branch is not available on the remote."},"githubPullRequests.pullBranch":{"type":"string","enum":["prompt","never","always"],"default":"prompt","markdownEnumDescriptions":["Prompt to pull a PR branch when changes are detected in the PR.","Never pull a PR branch when changes are detected in the PR.","Always pull a PR branch when changes are detected in the PR. When `\"git.autoStash\": true` this will instead `prompt` to prevent unexpected file changes."],"description":"Pull changes from the remote when a PR branch is checked out locally. Changes are detected when the PR is manually refreshed and during periodic background updates."},"githubPullRequests.allowFetch":{"type":"boolean","default":true,"description":"Allows `git fetch` to be run for checked-out pull request branches when checking for updates to the pull request."},"githubPullRequests.ignoredPullRequestBranches":{"type":"array","default":[],"items":{"type":"string","description":"Branch name"},"description":"Prevents branches that are associated with a pull request from being automatically detected. This will prevent review mode from being entered on these branches."},"githubPullRequests.neverIgnoreDefaultBranch":{"type":"boolean","description":"Never offer to ignore a pull request associated with the default branch of a repository."},"githubPullRequests.overrideDefaultBranch":{"type":"string","description":"The default branch for a repository is set on github.com. With this setting, you can override that default with another branch."},"githubPullRequests.postCreate":{"type":"string","enum":["none","openOverview","checkoutDefaultBranch","checkoutDefaultBranchAndShow","checkoutDefaultBranchAndCopy"],"description":"The action to take after creating a pull request.","default":"openOverview","enumDescriptions":["No action","Open the overview page of the pull request","Checkout the default branch of the repository","Checkout the default branch of the repository and show the pull request in the Pull Requests view","Checkout the default branch of the repository and copy a link to the pull request to the clipboard"]},"githubPullRequests.defaultCommentType":{"type":"string","enum":["single","review"],"default":"single","description":"The default comment type to use when submitting a comment and there is no active review","enumDescriptions":["Submits the comment as a single comment that will be immediately visible to other users","Submits the comment as a review comment that will be visible to other users once the review is submitted"]},"githubPullRequests.quickDiff":{"type":"boolean","description":"Enables quick diff in the editor gutter for checked-out pull requests. Requires a reload to take effect","default":false},"githubPullRequests.setAutoMerge":{"type":"boolean","description":"Checks the \"Auto-merge\" checkbox in the \"Create Pull Request\" view.","deprecationMessage":"Use the setting 'githubPullRequests.defaultCreateOption' instead.","default":false},"githubPullRequests.pullPullRequestBranchBeforeCheckout":{"type":"string","description":"Controls whether the pull request branch is pulled before checkout. Can also be set to additionally merge updates from the base branch.","enum":["never","pull","pullAndMergeBase","pullAndUpdateBase"],"default":"pull","enumDescriptions":["Never pull the pull request branch before checkout.","Pull the pull request branch before checkout.","Pull the pull request branch before checkout, fetch the base branch, and merge the base branch into the pull request branch.","Pull the pull request branch before checkout, fetch the base branch, merge the base branch into the pull request branch, and finally push the pull request branch to the remote."]},"githubPullRequests.upstreamRemote":{"type":"string","enum":["add","never"],"markdownDescription":"Controls whether an `upstream` remote is automatically added for forks","markdownEnumDescriptions":["An `upstream` remote will be automatically added for forks","An `upstream` remote will never be automatically added for forks"],"default":"add"},"githubPullRequests.createDefaultBaseBranch":{"type":"string","enum":["repositoryDefault","createdFromBranch","auto"],"markdownEnumDescriptions":["The default branch of the repository","The branch that the current branch was created from, if known","When the current repository is a fork, this will work like \"repositoryDefault\". Otherwise, it will work like \"createdFromBranch\"."],"default":"auto","markdownDescription":"Controls what the base branch picker defaults to when creating a pull request"},"githubIssues.ignoreMilestones":{"type":"array","default":[],"description":"An array of milestones titles to never show issues from."},"githubIssues.createIssueTriggers":{"type":"array","items":{"type":"string","description":"String that enables the 'Create issue from comment' code action. Should not contain whitespace."},"default":["TODO","todo","BUG","FIXME","ISSUE","HACK"],"description":"Strings that will cause the 'Create issue from comment' code action to show."},"githubIssues.createInsertFormat":{"type":"string","enum":["number","url"],"default":"number","description":"Controls whether an issue number (ex. #1234) or a full url (ex. https://github.com/owner/name/issues/1234) is inserted when the Create Issue code action is run."},"githubIssues.issueCompletions.enabled":{"type":"boolean","default":true,"description":"Controls whether completion suggestions are shown for issues."},"githubIssues.userCompletions.enabled":{"type":"boolean","default":true,"description":"Controls whether completion suggestions are shown for users."},"githubIssues.ignoreCompletionTrigger":{"type":"array","items":{"type":"string","description":"Language that issue completions should not trigger on '#'."},"default":["coffeescript","diff","dockerfile","dockercompose","ignore","ini","julia","makefile","perl","powershell","python","r","ruby","shellscript","yaml"],"description":"Languages that the '#' character should not be used to trigger issue completion suggestions."},"githubIssues.ignoreUserCompletionTrigger":{"type":"array","items":{"type":"string","description":"Language that user completions should not trigger on '@'."},"default":["python"],"description":"Languages that the '@' character should not be used to trigger user completion suggestions."},"githubIssues.issueBranchTitle":{"type":"string","default":"${user}/issue${issueNumber}","markdownDescription":"Advanced settings for the name of the branch that is created when you start working on an issue. \n- `${user}` will be replace with the currently logged in username \n- `${issueNumber}` will be replaced with the current issue number \n- `${sanitizedIssueTitle}` will be replaced with the issue title, with all spaces and unsupported characters (https://git-scm.com/docs/git-check-ref-format) removed"},"githubIssues.useBranchForIssues":{"type":"string","enum":["on","off","prompt"],"enumDescriptions":["A branch will always be checked out when you start working on an issue. If the branch doesn't exist, it will be created.","A branch will not be created when you start working on an issue. If you have worked on an issue before and a branch was created for it, that same branch will be checked out.","A prompt will show for setting the name of the branch that will be created and checked out."],"default":"on","markdownDescription":"Determines whether a branch should be checked out when working on an issue. To configure the name of the branch, set `#githubIssues.issueBranchTitle#`."},"githubIssues.issueCompletionFormatScm":{"type":"string","default":"${issueTitle} ${issueNumberLabel}","markdownDescription":"Sets the format of issue completions in the SCM inputbox. \n- `${user}` will be replace with the currently logged in username \n- `${issueNumber}` will be replaced with the current issue number \n- `${issueNumberLabel}` will be replaced with a label formatted as #number or owner/repository#number, depending on whether the issue is in the current repository"},"githubIssues.workingIssueFormatScm":{"type":"string","default":"${issueTitle} \nFixes ${issueNumberLabel}","markdownDescription":"Sets the format of the commit message that is set in the SCM inputbox when you **Start Working on an Issue**. Defaults to `${issueTitle} \nFixes ${issueNumberLabel}`","editPresentation":"multilineText"},"githubIssues.queries":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The label to display for the query in the Issues tree."},"query":{"type":"string","markdownDescription":"The search query using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) with variables. The variable `${user}` can be used to specify the logged in user within a search. `${owner}` and `${repository}` can be used to specify the repository by using `repo:${owner}/${repository}`."},"groupBy":{"type":"array","markdownDescription":"The categories to group issues by when displaying them, in the order in which they should be grouped","items":{"type":"string","enum":["repository","milestone"],"enumDescriptions":["Group issues by their milestone.","Group issues by their repository."]}}}},"scope":"resource","markdownDescription":"Specifies what queries should be used in the GitHub issues tree using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) with variables. The first query listed will be expanded in the Issues view. The \"default\" query includes issues assigned to you by Milestone. If you want to preserve these, make sure they are still in the array when you modify the setting.","default":[{"label":"My Issues","query":"is:open assignee:${user} repo:${owner}/${repository}","groupBy":["milestone"]},{"label":"Created Issues","query":"author:${user} state:open repo:${owner}/${repository} sort:created-desc"},{"label":"Recent Issues","query":"state:open repo:${owner}/${repository} sort:updated-desc"}]},"githubIssues.assignWhenWorking":{"type":"boolean","default":true,"description":"Assigns the issue you're working on to you. Only applies when the issue you're working on is in a repo you currently have open."},"githubPullRequests.focusedMode":{"properties":{"oneOf":[{"type":"boolean"},{"type":"string"}]},"enum":["firstDiff","overview","multiDiff",false],"default":"multiDiff","description":"The layout to use when a pull request is checked out. Set to false to prevent layout changes."},"githubPullRequests.showPullRequestNumberInTree":{"type":"boolean","default":false,"description":"Shows the pull request number in the tree view."}}},"viewsContainers":{"activitybar":[{"id":"github-pull-requests","title":"GitHub Pull Requests","icon":"$(github)"},{"id":"github-pull-request","title":"GitHub Pull Request","icon":"$(git-pull-request)"}]},"views":{"github-pull-requests":[{"id":"github:login","name":"Login","when":"ReposManagerStateContext == NeedsAuthentication","icon":"$(git-pull-request)"},{"id":"pr:github","name":"Pull Requests","when":"ReposManagerStateContext != NeedsAuthentication && !github:resolvingConflicts","icon":"$(git-pull-request)","accessibilityHelpContent":"Helpful commands include:\n-GitHub Pull Requests: Refresh Pull Requests List<keybinding:pr.refreshList>\n-GitHub Pull Requests: Focus on Issues View<keybinding:issues:github.focus> \n-GitHub Pull Requests: Focus on Pull Requests View<keybinding:pr:github.focus>\n-GitHub Issues: Copy GitHub Permalink<keybinding:issue.copyGithubPermalink>\n-GitHub Issues: Create an Issue<keybinding:issue.createIssueFromFile>\n-GitHub Pull Requests: Create Pull Request<keybinding:pr.create>"},{"id":"issues:github","name":"Issues","when":"ReposManagerStateContext != NeedsAuthentication && !github:resolvingConflicts","icon":"$(issues)","accessibilityHelpContent":"Helpful commands include:\n-GitHub Pull Requests: Refresh Pull Requests List<keybinding:pr.refreshList>\n-GitHub Pull Requests: Focus on Issues View<keybinding:issues:github.focus> \n-GitHub Pull Requests: Focus on Pull Requests View<keybinding:pr:github.focus>\n-GitHub Issues: Copy GitHub Permalink<keybinding:issue.copyGithubPermalink>\n-GitHub Issues: Create an Issue<keybinding:issue.createIssueFromFile>\n-GitHub Pull Requests: Create Pull Request<keybinding:pr.create>"},{"id":"github:conflictResolution","name":"Conflict Resolution","when":"github:resolvingConflicts","icon":"$(git-merge)"}],"github-pull-request":[{"id":"github:createPullRequestWebview","type":"webview","name":"Create","when":"github:createPullRequest","visibility":"visible","initialSize":2},{"id":"github:compareChangesFiles","name":"Files Changed","when":"github:createPullRequest","visibility":"visible","initialSize":1},{"id":"github:compareChangesCommits","name":"Commits","when":"github:createPullRequest","visibility":"visible","initialSize":1},{"id":"prStatus:github","name":"Changes In Pull Request","when":"github:inReviewMode && !github:createPullRequest","icon":"$(git-pull-request)","visibility":"visible","initialSize":3},{"id":"github:activePullRequest","type":"webview","name":"Active Pull Request","when":"github:inReviewMode && github:focusedReview && !github:createPullRequest && github:activePRCount <= 1","initialSize":2},{"id":"github:activePullRequest:welcome","name":"Active Pull Request","when":"!github:stateValidated && github:focusedReview"}]},"commands":[{"command":"github.api.preloadPullRequest","title":"Preload Pull Request","category":"GitHub Pull Requests"},{"command":"pr.create","title":"Create Pull Request","icon":"$(git-pull-request-create)","category":"GitHub Pull Requests"},{"command":"pr.pushAndCreate","title":"Create Pull Request","icon":"$(git-pull-request-create)","category":"GitHub Pull Requests"},{"command":"pr.pick","title":"Checkout Pull Request","category":"GitHub Pull Requests","icon":"$(arrow-right)"},{"command":"pr.openChanges","title":"Open Changes","category":"GitHub Pull Requests","icon":"$(diff-multiple)"},{"command":"pr.pickOnVscodeDev","title":"Checkout Pull Request on vscode.dev","category":"GitHub Pull Requests","icon":"$(globe)"},{"command":"pr.exit","title":"Checkout Default Branch","category":"GitHub Pull Requests"},{"command":"pr.dismissNotification","title":"Dismiss Notification","category":"GitHub Pull Requests"},{"command":"pr.merge","title":"Merge Pull Request","category":"GitHub Pull Requests"},{"command":"pr.readyForReview","title":"Mark Pull Request Ready For Review","category":"GitHub Pull Requests"},{"command":"pr.close","title":"Close Pull Request","category":"GitHub Pull Requests"},{"command":"pr.openPullRequestOnGitHub","title":"Open Pull Request on GitHub","category":"GitHub Pull Requests","icon":"$(globe)"},{"command":"pr.openAllDiffs","title":"Open All Diffs","category":"GitHub Pull Requests"},{"command":"pr.refreshPullRequest","title":"Refresh Pull Request","category":"GitHub Pull Requests"},{"command":"pr.openFileOnGitHub","title":"Open File on GitHub","category":"GitHub Pull Requests"},{"command":"pr.copyCommitHash","title":"Copy Commit Hash","category":"GitHub Pull Requests"},{"command":"pr.openOriginalFile","title":"Open Original File","category":"GitHub Pull Requests"},{"command":"pr.openModifiedFile","title":"Open Modified File","category":"GitHub Pull Requests"},{"command":"pr.openDiffView","title":"Open Diff View","category":"GitHub Pull Requests","icon":"$(compare-changes)"},{"command":"pr.openDiffViewFromEditor","title":"Open Pull Request Diff View","category":"GitHub Pull Requests","icon":"$(git-pull-request)"},{"command":"pr.openDescription","title":"View Pull Request Description","category":"GitHub Pull Requests","when":"github:inReviewMode","icon":"$(note)"},{"command":"pr.openDescriptionToTheSide","title":"Open Pull Request Description to the Side","icon":"$(split-horizontal)"},{"command":"pr.refreshDescription","title":"Refresh Pull Request Description","category":"GitHub Pull Requests"},{"command":"pr.focusDescriptionInput","title":"Focus Pull Request Description Review Input","category":"GitHub Pull Requests"},{"command":"pr.showDiffSinceLastReview","title":"Show Changes Since Last Review","icon":"$(git-pull-request-new-changes)"},{"command":"pr.showDiffAll","title":"Show All Changes","icon":"$(git-pull-request-go-to-changes)"},{"command":"pr.checkoutByNumber","title":"Checkout Pull Request by Number","category":"GitHub Pull Requests","icon":"$(symbol-numeric)"},{"command":"review.openFile","title":"Open File","icon":"$(go-to-file)"},{"command":"review.openLocalFile","title":"Open File","icon":"$(go-to-file)"},{"command":"review.suggestDiff","title":"Suggest Edit","category":"GitHub Pull Requests"},{"command":"pr.refreshList","title":"Refresh Pull Requests List","icon":"$(refresh)","category":"GitHub Pull Requests"},{"command":"pr.setFileListLayoutAsTree","title":"View as Tree","icon":"$(list-tree)","category":"GitHub Pull Requests"},{"command":"pr.setFileListLayoutAsFlat","title":"View as List","icon":"$(list-flat)","category":"GitHub Pull Requests"},{"command":"pr.refreshChanges","title":"Refresh","icon":"$(refresh)","category":"GitHub Pull Requests"},{"command":"pr.configurePRViewlet","title":"Configure...","category":"GitHub Pull Requests","icon":"$(gear)"},{"command":"pr.deleteLocalBranch","title":"Delete Local Branch","category":"GitHub Pull Requests"},{"command":"pr.signin","title":"Sign in to GitHub","category":"GitHub Pull Requests"},{"command":"pr.signinNoEnterprise","title":"Sign in to GitHub","category":"GitHub Pull Requests"},{"command":"pr.signinenterprise","title":"Sign in to GitHub Enterprise","category":"GitHub Pull Requests"},{"command":"pr.deleteLocalBranchesNRemotes","title":"Delete local branches and remotes","category":"GitHub Pull Requests"},{"command":"pr.createComment","title":"Add Review Comment","category":"GitHub Pull Requests","enablement":"!commentIsEmpty"},{"command":"pr.createSingleComment","title":"Add Comment","category":"GitHub Pull Requests","enablement":"!commentIsEmpty"},{"command":"pr.makeSuggestion","title":"Make a Suggestion","category":"GitHub Pull Requests"},{"command":"pr.startReview","title":"Start Review","category":"GitHub Pull Requests","enablement":"!commentIsEmpty"},{"command":"pr.editComment","title":"Edit Comment","category":"GitHub Pull Requests","icon":"$(edit)","enablement":"!(comment =~ /temporary/)"},{"command":"pr.cancelEditComment","title":"Cancel","category":"GitHub Pull Requests"},{"command":"pr.saveComment","title":"Save","category":"GitHub Pull Requests","enablement":"!commentIsEmpty"},{"command":"pr.deleteComment","title":"Delete Comment","category":"GitHub Pull Requests","icon":"$(trash)","enablement":"!(comment =~ /temporary/)"},{"command":"pr.resolveReviewThread","title":"Resolve Conversation","category":"GitHub Pull Requests","icon":"$(check)"},{"command":"pr.unresolveReviewThread","title":"Unresolve Conversation","category":"GitHub Pull Requests","icon":"$(sync)"},{"command":"pr.diffOutdatedCommentWithHead","title":"Diff Comment with HEAD","category":"GitHub Pull Requests","icon":"$(git-compare)"},{"command":"pr.signinAndRefreshList","title":"Sign in and Refresh","category":"GitHub Pull Requests"},{"command":"pr.configureRemotes","title":"Configure Remotes...","category":"GitHub Pull Requests"},{"command":"pr.refreshActivePullRequest","title":"Refresh","category":"GitHub Pull Requests","icon":"$(refresh)"},{"command":"pr.markFileAsViewed","title":"Mark File As Viewed","category":"GitHub Pull Requests","icon":"$(pass)"},{"command":"pr.unmarkFileAsViewed","title":"Mark File As Not Viewed","category":"GitHub Pull Requests","icon":"$(pass-filled)"},{"command":"pr.openReview","title":"Go to Review","category":"GitHub Pull Requests"},{"command":"pr.collapseAllComments","title":"Collapse All Comments","category":"Comments","icon":"$(collapse-all)"},{"command":"pr.editQuery","title":"Edit Query","category":"GitHub Pull Requests","icon":"$(edit)"},{"command":"pr.openPullsWebsite","title":"Open on GitHub","category":"GitHub Pull Requests","icon":"$(globe)"},{"command":"pr.resetViewedFiles","title":"Reset Viewed Files","category":"GitHub Pull Requests"},{"command":"pr.goToNextDiffInPr","title":"Go to Next Diff in Pull Request","category":"GitHub Pull Requests"},{"command":"pr.goToPreviousDiffInPr","title":"Go to Previous Diff in Pull Request","category":"GitHub Pull Requests"},{"command":"pr.copyCommentLink","title":"Copy Comment Link","category":"GitHub Pull Requests","icon":"$(copy)","enablement":"!(comment =~ /temporary/)"},{"command":"pr.applySuggestion","title":"Apply Suggestion","category":"GitHub Pull Requests","icon":"$(gift)"},{"command":"pr.addAssigneesToNewPr","title":"Add Assignees","category":"GitHub Pull Requests","icon":"$(account)"},{"command":"pr.addReviewersToNewPr","title":"Add Reviewers","category":"GitHub Pull Requests","icon":"$(feedback)"},{"command":"pr.addLabelsToNewPr","title":"Apply Labels","category":"GitHub Pull Requests","icon":"$(tag)"},{"command":"pr.addMilestoneToNewPr","title":"Set Milestone","category":"GitHub Pull Requests","icon":"$(milestone)"},{"command":"pr.addProjectsToNewPr","title":"Set Projects","category":"GitHub Pull Requests","icon":"$(github-project)"},{"command":"pr.addFileComment","title":"Add File Comment","category":"GitHub Pull Requests","icon":"$(comment)"},{"command":"pr.checkoutFromReadonlyFile","title":"Checkout Pull Request","category":"GitHub Pull Requests"},{"command":"pr.resolveConflict","title":"Resolve Conflict","category":"GitHub Pull Requests"},{"command":"pr.acceptMerge","title":"Accept Merge","category":"GitHub Pull Requests"},{"command":"review.diffWithPrHead","title":"Compare Base With Pull Request Head (readonly)","category":"GitHub Pull Requests"},{"command":"review.diffLocalWithPrHead","title":"Compare Pull Request Head with Local","category":"GitHub Pull Requests"},{"command":"review.approve","title":"Approve","category":"GitHub Pull Requests"},{"command":"review.comment","title":"Comment","category":"GitHub Pull Requests"},{"command":"review.requestChanges","title":"Request Changes","category":"GitHub Pull Requests"},{"command":"review.approveOnDotCom","title":"Approve on github.com","category":"GitHub Pull Requests"},{"command":"review.requestChangesOnDotCom","title":"Request changes on github.com","category":"GitHub Pull Requests"},{"command":"review.approveDescription","title":"Approve","category":"GitHub Pull Requests"},{"command":"review.commentDescription","title":"Comment","category":"GitHub Pull Requests"},{"command":"review.requestChangesDescription","title":"Request Changes","category":"GitHub Pull Requests"},{"command":"review.approveOnDotComDescription","title":"Approve on github.com","category":"GitHub Pull Requests"},{"command":"review.requestChangesOnDotComDescription","title":"Request changes on github.com","category":"GitHub Pull Requests"},{"command":"pr.createPrMenuCreate","title":"Create","category":"GitHub Pull Requests"},{"command":"pr.createPrMenuDraft","title":"Create Draft","category":"GitHub Pull Requests"},{"command":"pr.createPrMenuMergeWhenReady","title":"Create + Merge When Ready","category":"GitHub Pull Requests"},{"command":"pr.createPrMenuMerge","title":"Create + Auto-Merge","category":"GitHub Pull Requests"},{"command":"pr.createPrMenuSquash","title":"Create + Auto-Squash","category":"GitHub Pull Requests"},{"command":"pr.createPrMenuRebase","title":"Create + Auto-Rebase","category":"GitHub Pull Requests"},{"command":"issue.createIssueFromSelection","title":"Create Issue From Selection","category":"GitHub Issues"},{"command":"issue.createIssueFromClipboard","title":"Create Issue From Clipboard","category":"GitHub Issues"},{"command":"pr.copyVscodeDevPrLink","title":"Copy vscode.dev Pull Request Link","category":"GitHub Issues"},{"command":"pr.refreshComments","title":"Refresh Pull Request Comments","category":"GitHub Pull Requests","icon":"$(refresh)"},{"command":"issue.copyGithubDevLinkWithoutRange","title":"Copy github.dev Link","category":"GitHub Issues","enablement":"!isInEmbeddedEditor"},{"command":"issue.copyGithubDevLinkFile","title":"Copy github.dev Link","category":"GitHub Issues","enablement":"!isInEmbeddedEditor"},{"command":"issue.copyGithubDevLink","title":"Copy github.dev Link","category":"GitHub Issues","enablement":"!isInEmbeddedEditor"},{"command":"issue.copyGithubPermalink","title":"Copy GitHub Permalink","category":"GitHub Issues","enablement":"!isInEmbeddedEditor"},{"command":"issue.copyGithubHeadLink","title":"Copy GitHub Head Link","category":"GitHub Issues","enablement":"!isInEmbeddedEditor"},{"command":"issue.copyGithubPermalinkWithoutRange","title":"Copy GitHub Permalink","category":"GitHub Issues","enablement":"!isInEmbeddedEditor"},{"command":"issue.copyGithubHeadLinkWithoutRange","title":"Copy GitHub Head Link","category":"GitHub Issues","enablement":"!isInEmbeddedEditor"},{"command":"issue.copyMarkdownGithubPermalink","title":"Copy GitHub Permalink as Markdown","category":"GitHub Issues","enablement":"!isInEmbeddedEditor"},{"command":"issue.copyMarkdownGithubPermalinkWithoutRange","title":"Copy GitHub Permalink as Markdown","category":"GitHub Issues","enablement":"!isInEmbeddedEditor"},{"command":"issue.openGithubPermalink","title":"Open Permalink on GitHub","category":"GitHub Issues"},{"command":"issue.openIssue","title":"Open Issue on GitHub","category":"GitHub Issues","icon":"$(globe)"},{"command":"issue.copyIssueNumber","title":"Copy Issue Number","category":"GitHub Issues"},{"command":"issue.copyIssueUrl","title":"Copy Issue Link","category":"GitHub Issues"},{"command":"issue.refresh","title":"Refresh","category":"GitHub Issues","icon":"$(refresh)"},{"command":"issue.suggestRefresh","title":"Refresh Suggestions","category":"GitHub Issues"},{"command":"issue.startWorking","title":"Start Working on Issue","category":"GitHub Issues","icon":"$(arrow-right)"},{"command":"issue.startWorkingBranchDescriptiveTitle","title":"Start Working on Issue and Checkout Topic Branch","category":"GitHub Issues","icon":"$(arrow-right)"},{"command":"issue.continueWorking","title":"Continue Working on Issue","category":"GitHub Issues","icon":"$(arrow-right)"},{"command":"issue.startWorkingBranchPrompt","title":"Start Working and Set Branch...","category":"GitHub Issues"},{"command":"issue.stopWorking","title":"Stop Working on Issue","category":"GitHub Issues","icon":"$(primitive-square)"},{"command":"issue.stopWorkingBranchDescriptiveTitle","title":"Stop Working on Issue and Leave Topic Branch","category":"GitHub Issues","icon":"$(primitive-square)"},{"command":"issue.statusBar","title":"Current Issue Options","category":"GitHub Issues"},{"command":"issue.getCurrent","title":"Get current issue","category":"GitHub Issues"},{"command":"issue.editQuery","title":"Edit Query","category":"GitHub Issues","icon":"$(edit)"},{"command":"issue.createIssue","title":"Create an Issue","category":"GitHub Issues","icon":"$(plus)"},{"command":"issue.createIssueFromFile","title":"Create Issue","icon":"$(check)","enablement":"!issues.creatingFromFile"},{"command":"issue.issueCompletion","title":"Issue Completion Chosen"},{"command":"issue.userCompletion","title":"User Completion Chosen"},{"command":"issue.signinAndRefreshList","title":"Sign in and Refresh","category":"GitHub Issues"},{"command":"issue.goToLinkedCode","title":"Go to Linked Code","category":"GitHub Issues"},{"command":"issues.openIssuesWebsite","title":"Open on GitHub","category":"GitHub Pull Requests","icon":"$(globe)"}],"viewsWelcome":[{"view":"github:login","when":"ReposManagerStateContext == NeedsAuthentication && github:hasGitHubRemotes","contents":"You have not yet signed in with GitHub\n[Sign in](command:pr.signin)"},{"view":"pr:github","when":"gitNotInstalled","contents":"Git is not installed or otherwise not available. Install git or fix your git installation and then reload."},{"view":"github:login","when":"ReposManagerStateContext == NeedsAuthentication && !github:hasGitHubRemotes && gitOpenRepositoryCount","contents":"You have not yet signed in with GitHub\n[Sign in](command:pr.signinNoEnterprise)"},{"view":"github:login","when":"ReposManagerStateContext == NeedsAuthentication && !github:hasGitHubRemotes && gitOpenRepositoryCount","contents":"[Sign in with GitHub Enterprise](command:pr.signinenterprise)"},{"view":"pr:github","when":"git.state != initialized && !github:initialized && workspaceFolderCount > 0","contents":"Loading..."},{"view":"pr:github","when":"workspaceFolderCount > 0 && github:loadingPrsTree","contents":"Loading..."},{"view":"pr:github","when":"workspaceFolderCount == 0","contents":"You have not yet opened a folder.\n[Open Folder](command:workbench.action.files.openFolder)"},{"view":"pr:github","when":"git.state == initialized && gitOpenRepositoryCount == 0 && workspaceFolderCount > 0 && git.parentRepositoryCount == 0","contents":"No git repositories found"},{"view":"pr:github","when":"git.state == initialized && gitOpenRepositoryCount == 0 && workspaceFolderCount > 0 && git.parentRepositoryCount == 1","contents":"A git repository was found in the parent folders of the workspace or the open file(s).\n[Open Repository](command:git.openRepositoriesInParentFolders)\nUse the [git.openRepositoryInParentFolders](command:workbench.action.openSettings?%5B%22git.openRepositoryInParentFolders%22%5D) setting to control whether git repositories in parent folders of workspaces or open files are opened. To learn more [read our docs](https://aka.ms/vscode-git-repository-in-parent-folders)."},{"view":"pr:github","when":"git.state == initialized && gitOpenRepositoryCount == 0 && workspaceFolderCount > 0 && git.parentRepositoryCount > 1","contents":"A git repository was found in the parent folders of the workspace or the open file(s).\n[Open Repository](command:git.openRepositoriesInParentFolders)\nUse the [git.openRepositoryInParentFolders](command:workbench.action.openSettings?%5B%22git.openRepositoryInParentFolders%22%5D) setting to control whether git repositories in parent folders of workspaces or open files are opened. To learn more [read our docs](https://aka.ms/vscode-git-repository-in-parent-folders)."},{"view":"issues:github","when":"git.state != initialized && !github:initialized && workspaceFolderCount > 0","contents":"Loading..."},{"view":"issues:github","when":"workspaceFolderCount > 0 && github:loadingPrsTree","contents":"Loading..."},{"view":"issues:github","when":"workspaceFolderCount == 0","contents":"You have not yet opened a folder."},{"view":"issues:github","when":"git.state == initialized && gitOpenRepositoryCount == 0 && workspaceFolderCount > 0 && git.parentRepositoryCount == 0","contents":"No git repositories found"},{"view":"issues:github","when":"git.state == initialized && gitOpenRepositoryCount == 0 && workspaceFolderCount > 0 && git.parentRepositoryCount == 1","contents":"A git repository was found in the parent folders of the workspace or the open file(s).\n[Open Repository](command:git.openRepositoriesInParentFolders)\nUse the [git.openRepositoryInParentFolders](command:workbench.action.openSettings?%5B%22git.openRepositoryInParentFolders%22%5D) setting to control whether git repositories in parent folders of workspaces or open files are opened. To learn more [read our docs](https://aka.ms/vscode-git-repository-in-parent-folders)."},{"view":"issues:github","when":"git.state == initialized && gitOpenRepositoryCount == 0 && workspaceFolderCount > 0 && git.parentRepositoryCount > 1","contents":"A git repository was found in the parent folders of the workspace or the open file(s).\n[Open Repository](command:git.openRepositoriesInParentFolders)\nUse the [git.openRepositoryInParentFolders](command:workbench.action.openSettings?%5B%22git.openRepositoryInParentFolders%22%5D) setting to control whether git repositories in parent folders of workspaces or open files are opened. To learn more [read our docs](https://aka.ms/vscode-git-repository-in-parent-folders)."},{"view":"github:activePullRequest:welcome","when":"!github:stateValidated","contents":"Loading..."}],"keybindings":[{"key":"ctrl+shift+space","command":"issue.suggestRefresh","when":"suggestWidgetVisible"},{"key":"ctrl+s","mac":"cmd+s","command":"issue.createIssueFromFile","when":"resourceScheme == newIssue && config.files.autoSave != off"},{"key":"ctrl+enter","mac":"cmd+enter","command":"issue.createIssueFromFile","when":"resourceScheme == newIssue"},{"key":"ctrl+k m","mac":"cmd+k m","command":"pr.makeSuggestion","when":"commentEditorFocused"}],"menus":{"commandPalette":[{"command":"github.api.preloadPullRequest","when":"false"},{"command":"pr.configureRemotes","when":"gitHubOpenRepositoryCount != 0"},{"command":"pr.configurePRViewlet","when":"gitHubOpenRepositoryCount != 0"},{"command":"pr.pick","when":"false"},{"command":"pr.openChanges","when":"false"},{"command":"pr.pickOnVscodeDev","when":"false"},{"command":"pr.exit","when":"github:inReviewMode"},{"command":"pr.dismissNotification","when":"false"},{"command":"pr.resetViewedFiles","when":"github:inReviewMode"},{"command":"review.openFile","when":"false"},{"command":"review.openLocalFile","when":"false"},{"command":"pr.close","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.create","when":"gitHubOpenRepositoryCount != 0 && github:authenticated"},{"command":"pr.pushAndCreate","when":"false"},{"command":"pr.merge","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.readyForReview","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.openPullRequestOnGitHub","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.openAllDiffs","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.refreshDescription","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.openFileOnGitHub","when":"false"},{"command":"pr.openOriginalFile","when":"false"},{"command":"pr.openModifiedFile","when":"false"},{"command":"pr.refreshPullRequest","when":"false"},{"command":"pr.deleteLocalBranch","when":"false"},{"command":"pr.openDiffView","when":"false"},{"command":"pr.openDiffViewFromEditor","when":"false"},{"command":"pr.openDescriptionToTheSide","when":"false"},{"command":"pr.openDescription","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.focusDescriptionInput","when":"github:pullRequestDescriptionVisible"},{"command":"pr.showDiffSinceLastReview","when":"false"},{"command":"pr.showDiffAll","when":"false"},{"command":"review.suggestDiff","when":"false"},{"command":"review.approve","when":"false"},{"command":"review.comment","when":"false"},{"command":"review.requestChanges","when":"false"},{"command":"review.approveOnDotCom","when":"false"},{"command":"review.requestChangesOnDotCom","when":"false"},{"command":"review.approveDescription","when":"false"},{"command":"review.commentDescription","when":"false"},{"command":"review.requestChangesDescription","when":"false"},{"command":"review.approveOnDotComDescription","when":"false"},{"command":"review.requestChangesOnDotComDescription","when":"false"},{"command":"pr.refreshList","when":"gitHubOpenRepositoryCount != 0 && github:authenticated && github:hasGitHubRemotes"},{"command":"pr.setFileListLayoutAsTree","when":"false"},{"command":"pr.setFileListLayoutAsFlat","when":"false"},{"command":"pr.refreshChanges","when":"false"},{"command":"pr.signin","when":"gitHubOpenRepositoryCount != 0 && github:hasGitHubRemotes"},{"command":"pr.signinNoEnterprise","when":"false"},{"command":"pr.signinenterprise","when":"gitHubOpenRepositoryCount != 0 && github:hasGitHubRemotes"},{"command":"pr.signinAndRefreshList","when":"false"},{"command":"pr.copyCommitHash","when":"false"},{"command":"pr.createComment","when":"false"},{"command":"pr.createSingleComment","when":"false"},{"command":"pr.makeSuggestion","when":"false"},{"command":"pr.startReview","when":"false"},{"command":"pr.editComment","when":"false"},{"command":"pr.cancelEditComment","when":"false"},{"command":"pr.saveComment","when":"false"},{"command":"pr.deleteComment","when":"false"},{"command":"pr.openReview","when":"false"},{"command":"pr.editQuery","when":"false"},{"command":"pr.markFileAsViewed","when":"false"},{"command":"pr.unmarkFileAsViewed","when":"false"},{"command":"pr.checkoutByNumber","when":"gitHubOpenRepositoryCount != 0 && github:initialized && github:authenticated"},{"command":"pr.collapseAllComments","when":"false"},{"command":"pr.copyVscodeDevPrLink","when":"github:inReviewMode && remoteName != codespaces && embedderIdentifier != github.dev"},{"command":"pr.goToNextDiffInPr","when":"activeEditor == workbench.editors.textDiffEditor && resourcePath in github:unviewedFiles"},{"command":"pr.goToNextDiffInPr","when":"activeEditor == workbench.editors.textDiffEditor && resourcePath in github:viewedFiles"},{"command":"pr.goToPreviousDiffInPr","when":"activeEditor == workbench.editors.textDiffEditor && resourcePath in github:unviewedFiles"},{"command":"pr.goToPreviousDiffInPr","when":"activeEditor == workbench.editors.textDiffEditor && resourcePath in github:viewedFiles"},{"command":"pr.copyCommentLink","when":"false"},{"command":"pr.addAssigneesToNewPr","when":"false"},{"command":"pr.addReviewersToNewPr","when":"false"},{"command":"pr.addLabelsToNewPr","when":"false"},{"command":"pr.addMilestoneToNewPr","when":"false"},{"command":"pr.addProjectsToNewPr","when":"false"},{"command":"pr.addFileComment","when":"false"},{"command":"review.diffWithPrHead","when":"false"},{"command":"review.diffLocalWithPrHead","when":"false"},{"command":"pr.createPrMenuCreate","when":"false"},{"command":"pr.createPrMenuDraft","when":"false"},{"command":"pr.createPrMenuMergeWhenReady","when":"false"},{"command":"pr.createPrMenuMerge","when":"false"},{"command":"pr.createPrMenuSquash","when":"false"},{"command":"pr.createPrMenuRebase","when":"false"},{"command":"pr.refreshComments","when":"gitHubOpenRepositoryCount != 0"},{"command":"pr.resolveConflict","when":"false"},{"command":"pr.acceptMerge","when":"isMergeResultEditor && mergeEditorBaseUri =~ /^(githubpr|gitpr):/"},{"command":"issue.copyGithubPermalink","when":"github:hasGitHubRemotes"},{"command":"issue.copyGithubHeadLink","when":"github:hasGitHubRemotes"},{"command":"issue.copyMarkdownGithubPermalink","when":"github:hasGitHubRemotes"},{"command":"issue.openGithubPermalink","when":"github:hasGitHubRemotes"},{"command":"issue.openIssue","when":"false"},{"command":"issue.copyIssueNumber","when":"false"},{"command":"issue.copyIssueUrl","when":"false"},{"command":"issue.refresh","when":"false"},{"command":"issue.suggestRefresh","when":"false"},{"command":"issue.startWorking","when":"false"},{"command":"issue.startWorkingBranchDescriptiveTitle","when":"false"},{"command":"issue.continueWorking","when":"false"},{"command":"issue.startWorkingBranchPrompt","when":"false"},{"command":"issue.stopWorking","when":"false"},{"command":"issue.stopWorkingBranchDescriptiveTitle","when":"false"},{"command":"issue.statusBar","when":"false"},{"command":"issue.getCurrent","when":"false"},{"command":"issue.editQuery","when":"false"},{"command":"issue.createIssue","when":"github:hasGitHubRemotes && github:authenticated"},{"command":"issue.createIssueFromFile","when":"false"},{"command":"issue.issueCompletion","when":"false"},{"command":"issue.userCompletion","when":"false"},{"command":"issue.signinAndRefreshList","when":"false"},{"command":"issue.goToLinkedCode","when":"false"},{"command":"issue.copyGithubDevLinkWithoutRange","when":"false"},{"command":"issue.copyGithubDevLinkFile","when":"false"},{"command":"issue.copyGithubDevLink","when":"false"},{"command":"issue.copyGithubPermalinkWithoutRange","when":"false"},{"command":"issue.copyMarkdownGithubPermalinkWithoutRange","when":"false"},{"command":"issue.copyGithubHeadLinkWithoutRange","when":"false"},{"command":"pr.refreshActivePullRequest","when":"false"},{"command":"pr.applySuggestion","when":"false"},{"command":"pr.openPullsWebsite","when":"github:hasGitHubRemotes"},{"command":"issues.openIssuesWebsite","when":"github:hasGitHubRemotes"}],"view/title":[{"command":"pr.create","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == pr:github","group":"navigation@1"},{"command":"pr.refreshList","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == pr:github","group":"navigation@2"},{"command":"pr.openPullsWebsite","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == pr:github","group":"overflow@1"},{"command":"pr.checkoutByNumber","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == pr:github","group":"overflow@2"},{"command":"pr.configurePRViewlet","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == pr:github","group":"overflow@3"},{"command":"pr.refreshChanges","when":"view == prStatus:github","group":"navigation@2"},{"command":"pr.setFileListLayoutAsTree","when":"view == prStatus:github && fileListLayout:flat","group":"navigation"},{"command":"pr.setFileListLayoutAsFlat","when":"view == prStatus:github && !fileListLayout:flat","group":"navigation"},{"command":"issue.createIssue","when":"view == issues:github && github:hasGitHubRemotes","group":"navigation@1"},{"command":"issue.refresh","when":"view == issues:github","group":"navigation@2"},{"command":"issues.openIssuesWebsite","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == issues:github","group":"overflow@1"},{"command":"pr.configurePRViewlet","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == issues:github","group":"overflow@2"},{"command":"pr.refreshActivePullRequest","when":"view == github:activePullRequest && github:hasGitHubRemotes","group":"navigation@1"},{"command":"pr.openDescription","when":"view == github:activePullRequest && github:hasGitHubRemotes","group":"navigation@2"},{"command":"pr.openPullRequestOnGitHub","when":"view == github:activePullRequest && github:hasGitHubRemotes","group":"navigation@3"},{"command":"pr.addAssigneesToNewPr","when":"view == github:createPullRequestWebview && github:createPrPermissions != READ && github:createPrPermissions","group":"navigation@1"},{"command":"pr.addReviewersToNewPr","when":"view == github:createPullRequestWebview && github:createPrPermissions != READ && github:createPrPermissions","group":"navigation@2"},{"command":"pr.addLabelsToNewPr","when":"view == github:createPullRequestWebview && github:createPrPermissions != READ && github:createPrPermissions","group":"navigation@3"},{"command":"pr.addMilestoneToNewPr","when":"view == github:createPullRequestWebview && github:createPrPermissions != READ && github:createPrPermissions","group":"navigation@4"},{"command":"pr.addProjectsToNewPr","when":"view == github:createPullRequestWebview && github:createPrPermissions != READ && github:createPrPermissions","group":"navigation@5"},{"command":"pr.refreshComments","when":"view == workbench.panel.comments","group":"navigation"}],"view/item/context":[{"command":"pr.pick","when":"view == pr:github && viewItem =~ /(pullrequest(:local)?:nonactive)|(description:nonactive)/","group":"1_pullrequest@1"},{"command":"pr.pick","when":"view == pr:github && viewItem =~ /description:nonactive/","group":"inline@0"},{"command":"pr.openChanges","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /description/ && config.multiDiffEditor.experimental.enabled","group":"inline@1"},{"command":"pr.showDiffSinceLastReview","group":"inline@1","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /description:(active|nonactive):hasChangesSinceReview:showingAllChanges/"},{"command":"pr.showDiffAll","group":"inline@1","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /description:(active|nonactive):hasChangesSinceReview:showingChangesSinceReview/"},{"command":"pr.openDescriptionToTheSide","group":"inline@2","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /description/"},{"command":"pr.exit","when":"view == pr:github && viewItem =~ /pullrequest(:local)?:active|description:active/","group":"1_pullrequest@1"},{"command":"pr.pickOnVscodeDev","when":"view == pr:github && viewItem =~ /pullrequest(:local)?:nonactive|description/ && (!isWeb || remoteName != codespaces && virtualWorkspace != vscode-vfs)","group":"1_pullrequest@2"},{"command":"pr.refreshPullRequest","when":"view == pr:github && viewItem =~ /pullrequest|description/","group":"pullrequest@1"},{"command":"pr.openPullRequestOnGitHub","when":"view == pr:github && viewItem =~ /pullrequest|description/","group":"1_pullrequest@3"},{"command":"pr.deleteLocalBranch","when":"view == pr:github && viewItem =~ /pullrequest:local:nonactive/","group":"pullrequest@4"},{"command":"pr.dismissNotification","when":"view == pr:github && viewItem =~ /pullrequest(.*):notification/","group":"pullrequest@5"},{"command":"pr.copyCommitHash","when":"view == prStatus:github && viewItem =~ /commit/"},{"command":"review.openFile","group":"inline@0","when":"openDiffOnClick && view == prStatus:github && viewItem =~ /filechange(?!:DELETE)/"},{"command":"pr.openDiffView","group":"inline@0","when":"!openDiffOnClick && view == prStatus:github && viewItem =~ /filechange(?!:DELETE)/"},{"command":"pr.openFileOnGitHub","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /filechange/","group":"0_open@0"},{"command":"pr.openOriginalFile","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /filechange:MODIFY/","group":"0_open@1"},{"command":"pr.openModifiedFile","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /filechange:MODIFY/","group":"0_open@2"},{"command":"review.diffWithPrHead","group":"1_diff@0","when":"openDiffOnClick && view == prStatus:github && viewItem =~ /filechange(?!:DELETE)/"},{"command":"review.diffLocalWithPrHead","group":"1_diff@1","when":"openDiffOnClick && view == prStatus:github && viewItem =~ /filechange(?!:DELETE)/"},{"command":"pr.editQuery","when":"view == pr:github && viewItem == query","group":"inline"},{"command":"pr.editQuery","when":"view == pr:github && viewItem == query"},{"command":"issue.openIssue","when":"view == issues:github && viewItem =~ /^(link)?(current|continue)?issue/","group":"inline@2"},{"command":"issue.openIssue","when":"view == issues:github && viewItem =~ /^(link)?(current|continue)?issue/","group":"issues_0@1"},{"command":"issue.goToLinkedCode","when":"view == issues:github && viewItem =~ /^link(current|continue)?issue/","group":"issues_0@0"},{"command":"issue.startWorking","when":"view == issues:github && viewItem =~ /^(link)?issue/ && config.githubIssues.useBranchForIssues != on","group":"inline@1"},{"command":"issue.startWorkingBranchDescriptiveTitle","when":"view == issues:github && viewItem =~ /^(link)?issue/ && config.githubIssues.useBranchForIssues == on","group":"inline@1"},{"command":"issue.startWorking","when":"view == issues:github && viewItem =~ /^(link)?continueissue/ && config.githubIssues.useBranchForIssues != on","group":"inline@1"},{"command":"issue.startWorkingBranchDescriptiveTitle","when":"view == issues:github && viewItem =~ /^(link)?continueissue/ && config.githubIssues.useBranchForIssues == on","group":"inline@1"},{"command":"issue.startWorking","alt":"issue.startWorkingBranchPrompt","when":"view == issues:github && viewItem =~ /^(link)?issue/","group":"issues_0@2"},{"command":"issue.continueWorking","when":"view == issues:github && viewItem =~ /^(link)?continueissue/","group":"issues_0@2"},{"command":"pr.create","when":"view == issues:github && viewItem =~ /^(link)?currentissue/","group":"issues_0@2"},{"command":"issue.stopWorking","when":"view == issues:github && viewItem =~ /^(link)?currentissue/","group":"issues_0@3"},{"command":"issue.stopWorking","when":"view == issues:github && viewItem =~ /^(link)?currentissue/ && config.githubIssues.useBranchForIssues != on","group":"inline@1"},{"command":"issue.stopWorkingBranchDescriptiveTitle","when":"view == issues:github && viewItem =~ /^(link)?currentissue/ && config.githubIssues.useBranchForIssues == on","group":"inline@1"},{"command":"issue.copyIssueNumber","when":"view == issues:github && viewItem =~ /^(link)?(current|continue)?issue/","group":"issues_1@1"},{"command":"issue.copyIssueUrl","when":"view == issues:github && viewItem =~ /^(link)?(current|continue)?issue/","group":"issues_1@2"},{"command":"issue.editQuery","when":"view == issues:github && viewItem == query","group":"inline"},{"command":"issue.editQuery","when":"view == issues:github && viewItem == query"}],"commentsView/commentThread/context":[{"command":"pr.diffOutdatedCommentWithHead","group":"inline@0","when":"commentController =~ /^github-(browse|review)/ && commentThread =~ /outdated/"},{"command":"pr.resolveReviewThread","group":"inline@1","when":"commentController =~ /^github-(browse|review)/ && commentThread =~ /canResolve/"},{"command":"pr.unresolveReviewThread","group":"inline@1","when":"commentController =~ /^github-(browse|review)/ && commentThread =~ /canUnresolve/"},{"command":"pr.diffOutdatedCommentWithHead","group":"context@0","when":"commentController =~ /^github-(browse|review)/ && commentThread =~ /outdated/"},{"command":"pr.resolveReviewThread","group":"context@1","when":"commentController =~ /^github-(browse|review)/ && commentThread =~ /canResolve/"},{"command":"pr.unresolveReviewThread","group":"context@1","when":"commentController =~ /^github-(browse|review)/ && commentThread =~ /canUnresolve/"}],"editor/title":[{"command":"review.openFile","group":"navigation","when":"resourceScheme =~ /^review$/ && isInDiffEditor"},{"command":"review.openLocalFile","group":"navigation","when":"resourceScheme =~ /^review$/ && !isInDiffEditor"},{"command":"issue.createIssueFromFile","group":"navigation","when":"resourceFilename == NewIssue.md"},{"command":"pr.markFileAsViewed","group":"navigation","when":"resourceScheme != pr && resourceScheme != review && resourceScheme != filechange && resourcePath in github:unviewedFiles"},{"command":"pr.unmarkFileAsViewed","group":"navigation","when":"resourceScheme != pr && resourceScheme != review && resourceScheme != filechange && resourcePath in github:viewedFiles"},{"command":"pr.openDiffViewFromEditor","group":"navigation","when":"!isInDiffEditor && resourceScheme != pr && resourceScheme != review && resourceScheme != filechange && resourcePath in github:unviewedFiles"},{"command":"pr.openDiffViewFromEditor","group":"navigation","when":"!isInDiffEditor && resourceScheme != pr && resourceScheme != review && resourceScheme != filechange && resourcePath in github:viewedFiles"},{"command":"pr.addFileComment","group":"navigation","when":"(resourceScheme == pr) || (resourcePath in github:viewedFiles) || (resourcePath in github:unviewedFiles)"}],"editor/content":[{"command":"pr.acceptMerge","when":"isMergeResultEditor && mergeEditorBaseUri =~ /^(githubpr|gitpr):/"}],"scm/title":[{"command":"review.suggestDiff","when":"scmProvider =~ /^git|^remoteHub:github/ && scmProviderRootUri in github:reposInReviewMode","group":"inline"},{"command":"pr.create","when":"scmProvider =~ /^git|^remoteHub:github/ && scmProviderRootUri in github:reposNotInReviewMode","group":"navigation"}],"comments/commentThread/context":[{"command":"pr.createComment","group":"inline@1","when":"(commentController =~ /^github-browse/ && prInDraft) || (commentController =~ /^github-review/ && reviewInDraftMode)"},{"command":"pr.createSingleComment","group":"inline@1","when":"config.githubPullRequests.defaultCommentType != review && ((commentController =~ /^github-browse/ && !prInDraft) || (commentController =~ /^github-review/ && !reviewInDraftMode))"},{"command":"pr.startReview","group":"inline@1","when":"config.githubPullRequests.defaultCommentType == review && ((commentController =~ /^github-browse/ && !prInDraft) || (commentController =~ /^github-review/ && !reviewInDraftMode))"},{"command":"pr.startReview","group":"inline@2","when":"config.githubPullRequests.defaultCommentType != review && ((commentController =~ /^github-browse/ && !prInDraft) || (commentController =~ /^github-review/ && !reviewInDraftMode))"},{"command":"pr.createSingleComment","group":"inline@2","when":"config.githubPullRequests.defaultCommentType == review && ((commentController =~ /^github-browse/ && !prInDraft) || commentController =~ /^github-review/ && !reviewInDraftMode)"}],"comments/comment/editorActions":[{"command":"pr.makeSuggestion","group":"inline@3","when":"commentController =~ /^github-(browse|review)/"}],"comments/commentThread/additionalActions":[{"command":"pr.resolveReviewThread","group":"inline@1","when":"commentController =~ /^github-(browse|review)/ && commentThread =~ /canResolve/"},{"command":"pr.unresolveReviewThread","group":"inline@1","when":"commentController =~ /^github-(browse|review)/ && commentThread =~ /canUnresolve/"},{"command":"pr.openReview","group":"inline@2","when":"(commentController =~ /^github-browse/ && prInDraft) || (commentController =~ /^github-review/ && reviewInDraftMode)"}],"comments/commentThread/title/context":[{"command":"pr.resolveReviewThread","group":"inline@3","when":"commentController =~ /^github-(browse|review)/ && commentThread =~ /canResolve/"},{"command":"pr.unresolveReviewThread","group":"inline@3","when":"commentController =~ /^github-(browse|review)/ && commentThread =~ /canUnresolve/"}],"comments/commentThread/comment/context":[{"command":"pr.resolveReviewThread","when":"commentController =~ /^github-(browse|review)/ && commentThread =~ /canResolve/"},{"command":"pr.unresolveReviewThread","when":"commentController =~ /^github-(browse|review)/ && commentThread =~ /canUnresolve/"},{"command":"pr.applySuggestion","when":"commentController =~ /^github-review/ && comment =~ /hasSuggestion/"}],"comments/comment/title":[{"command":"pr.copyCommentLink","group":"inline@1","when":"commentController =~ /^github-(browse|review)/ && comment =~ /canEdit/"},{"command":"pr.applySuggestion","group":"inline@0","when":"commentController =~ /^github-review/ && comment =~ /hasSuggestion/"},{"command":"pr.editComment","group":"inline@2","when":"commentController =~ /^github-(browse|review)/ && comment =~ /canEdit/"},{"command":"pr.deleteComment","group":"inline@3","when":"commentController =~ /^github-(browse|review)/ && comment =~ /canDelete/"}],"comments/commentThread/title":[{"command":"pr.refreshComments","group":"0_refresh@0","when":"commentController =~ /^github-(browse|review)/"},{"command":"pr.collapseAllComments","group":"1_collapse@0","when":"commentController =~ /^github-(browse|review)/"}],"comments/comment/context":[{"command":"pr.saveComment","group":"inline@1","when":"commentController =~ /^github-(browse|review)/"},{"command":"pr.cancelEditComment","group":"inline@2","when":"commentController =~ /^github-(browse|review)/"}],"editor/context/copy":[{"command":"issue.copyGithubPermalink","when":"github:hasGitHubRemotes","group":"3_githubPullRequests@0"},{"command":"issue.copyMarkdownGithubPermalink","when":"github:hasGitHubRemotes","group":"3_githubPullRequests@1"},{"command":"issue.copyGithubHeadLink","when":"github:hasGitHubRemotes","group":"3_githubPullRequests@2"}],"editor/context/share":[{"command":"issue.copyGithubPermalink","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@0"},{"command":"issue.copyMarkdownGithubPermalink","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@1"},{"command":"issue.copyGithubHeadLink","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@2"},{"command":"issue.copyGithubDevLink","when":"github:hasGitHubRemotes && remoteName == codespaces && isWeb || github:hasGitHubRemotes && embedderIdentifier == github.dev","group":"0_vscode@0"}],"file/share":[{"command":"issue.copyGithubPermalink","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@0"},{"command":"pr.copyVscodeDevPrLink","when":"github:hasGitHubRemotes && github:inReviewMode && remoteName != codespaces && embedderIdentifier != github.dev","group":"1_githubPullRequests@1"},{"command":"issue.copyMarkdownGithubPermalink","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@2"},{"command":"issue.copyGithubHeadLink","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@3"},{"command":"issue.copyGithubDevLinkFile","when":"github:hasGitHubRemotes && remoteName == codespaces && isWeb || github:hasGitHubRemotes && embedderIdentifier == github.dev","group":"0_vscode@0"}],"editor/lineNumber/context":[{"command":"issue.copyGithubPermalink","when":"github:hasGitHubRemotes && activeEditor == workbench.editors.files.textFileEditor && config.editor.lineNumbers == on","group":"1_cutcopypaste@3"},{"command":"issue.copyMarkdownGithubPermalink","when":"github:hasGitHubRemotes && activeEditor == workbench.editors.files.textFileEditor && config.editor.lineNumbers == on","group":"1_cutcopypaste@4"},{"command":"issue.copyGithubHeadLink","when":"github:hasGitHubRemotes && activeEditor == workbench.editors.files.textFileEditor && config.editor.lineNumbers == on","group":"1_cutcopypaste@5"},{"command":"issue.copyGithubDevLink","when":"github:hasGitHubRemotes && remoteName == codespaces && isWeb || github:hasGitHubRemotes && embedderIdentifier == github.dev","group":"1_cutcopypaste@0"}],"editor/title/context/share":[{"command":"issue.copyGithubPermalinkWithoutRange","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@10"},{"command":"issue.copyMarkdownGithubPermalinkWithoutRange","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@11"},{"command":"issue.copyGithubHeadLinkWithoutRange","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@12"},{"command":"issue.copyGithubDevLinkWithoutRange","when":"github:hasGitHubRemotes && remoteName == codespaces && isWeb || github:hasGitHubRemotes && embedderIdentifier == github.dev","group":"0_vscode@0"}],"explorer/context/share":[{"command":"issue.copyGithubPermalinkWithoutRange","when":"github:hasGitHubRemotes","group":"5_githubPulLRequests@10"},{"command":"issue.copyMarkdownGithubPermalinkWithoutRange","when":"github:hasGitHubRemotes","group":"5_githubPulLRequests@11"},{"command":"issue.copyGithubHeadLinkWithoutRange","when":"github:hasGitHubRemotes","group":"5_githubPulLRequests@12"},{"command":"issue.copyGithubDevLinkWithoutRange","when":"github:hasGitHubRemotes && remoteName == codespaces && isWeb || github:hasGitHubRemotes && embedderIdentifier == github.dev","group":"0_vscode@0"}],"menuBar/edit/copy":[{"command":"issue.copyGithubPermalink","when":"github:hasGitHubRemotes"},{"command":"issue.copyMarkdownGithubPermalink","when":"github:hasGitHubRemotes"}],"remoteHub/pullRequest":[{"command":"pr.create","when":"scmProvider =~ /^remoteHub:github/","group":"1_modification@0"}],"webview/context":[{"command":"pr.createPrMenuCreate","when":"webviewId == 'github:createPullRequestWebview' && github:createPrMenu","group":"0_create@0"},{"command":"pr.createPrMenuDraft","when":"webviewId == 'github:createPullRequestWebview' && github:createPrMenu && github:createPrMenuDraft","group":"0_create@1"},{"command":"pr.createPrMenuMergeWhenReady","when":"webviewId == 'github:createPullRequestWebview' && github:createPrMenu && github:createPrMenuMergeWhenReady","group":"1_create@0"},{"command":"pr.createPrMenuMerge","when":"webviewId == 'github:createPullRequestWebview' && github:createPrMenu && github:createPrMenuMerge","group":"1_create@0"},{"command":"pr.createPrMenuSquash","when":"webviewId == 'github:createPullRequestWebview' && github:createPrMenu && github:createPrMenuSquash","group":"1_create@1"},{"command":"pr.createPrMenuRebase","when":"webviewId == 'github:createPullRequestWebview' && github:createPrMenu && github:createPrMenuRebase","group":"1_create@2"},{"command":"review.approve","when":"webviewId == 'github:activePullRequest' && github:reviewCommentMenu && github:reviewCommentApprove"},{"command":"review.comment","when":"webviewId == 'github:activePullRequest' && github:reviewCommentMenu && github:reviewCommentComment"},{"command":"review.requestChanges","when":"webviewId == 'github:activePullRequest' && github:reviewCommentMenu && github:reviewCommentRequestChanges"},{"command":"review.approveOnDotCom","when":"webviewId == 'github:activePullRequest' && github:reviewCommentMenu && github:reviewCommentApproveOnDotCom"},{"command":"review.requestChangesOnDotCom","when":"webviewId == 'github:activePullRequest' && github:reviewCommentMenu && github:reviewCommentRequestChangesOnDotCom"},{"command":"review.approveDescription","when":"webviewId == PullRequestOverview && github:reviewCommentMenu && github:reviewCommentApprove"},{"command":"review.commentDescription","when":"webviewId == PullRequestOverview && github:reviewCommentMenu && github:reviewCommentComment"},{"command":"review.requestChangesDescription","when":"webviewId == PullRequestOverview && github:reviewCommentMenu && github:reviewCommentRequestChanges"},{"command":"review.approveOnDotComDescription","when":"webviewId == PullRequestOverview && github:reviewCommentMenu && github:reviewCommentApproveOnDotCom"},{"command":"review.requestChangesOnDotComDescription","when":"webviewId == PullRequestOverview && github:reviewCommentMenu && github:reviewCommentRequestChangesOnDotCom"}]},"colors":[{"id":"issues.newIssueDecoration","defaults":{"dark":"#ffffff48","light":"#00000048","highContrast":"editor.foreground","highContrastLight":"editor.foreground"},"description":"The color used for the assignees and labels fields in a new issue editor."},{"id":"issues.open","defaults":{"dark":"#3FB950","light":"#3FB950","highContrast":"editor.foreground","highContrastLight":"editor.foreground"},"description":"The color used for indicating that an issue is open."},{"id":"issues.closed","defaults":{"dark":"#cb2431","light":"#cb2431","highContrast":"editor.foreground","highContrastLight":"editor.foreground"},"description":"The color used for indicating that an issue is closed."},{"id":"pullRequests.merged","defaults":{"dark":"#8957e5","light":"#8957e5","highContrast":"editor.background","highContrastLight":"editor.background"},"description":"The color used for indicating that a pull request is merged."},{"id":"pullRequests.draft","defaults":{"dark":"#6e7681","light":"#6e7681","highContrast":"editor.background","highContrastLight":"editor.background"},"description":"The color used for indicating that a pull request is a draft."},{"id":"pullRequests.open","defaults":{"dark":"issues.open","light":"issues.open","highContrast":"editor.background","highContrastLight":"editor.background"},"description":"The color used for indicating that a pull request is open."},{"id":"pullRequests.closed","defaults":{"dark":"issues.closed","light":"issues.closed","highContrast":"editor.background","highContrastLight":"editor.background"},"description":"The color used for indicating that a pull request is closed."},{"id":"pullRequests.notification","defaults":{"dark":"notificationsInfoIcon.foreground","light":"notificationsInfoIcon.foreground","highContrast":"editor.foreground","highContrastLight":"editor.foreground"},"description":"The color used for indicating a notification on a pull request"}],"resourceLabelFormatters":[{"scheme":"review","formatting":{"label":"${path}","separator":"/","workspaceSuffix":"GitHub","stripPathStartingSeparator":true}}]},"scripts":{"postinstall":"yarn update-dts","bundle":"webpack --mode production --env esbuild","bundle:node":"webpack --mode production --config-name extension:node --config-name webviews","bundle:web":"webpack --mode production --config-name extension:webworker --config-name webviews","clean":"rm -r dist/","compile":"webpack --mode development --env esbuild","compile:test":"tsc -p tsconfig.test.json","compile:node":"webpack --mode development --config-name extension:node --config-name webviews","compile:web":"webpack --mode development --config-name extension:webworker --config-name webviews","lint":"eslint --fix --cache --config .eslintrc.json --ignore-pattern src/env/browser/**/* \"{src,webviews}/**/*.{ts,tsx}\"","lint:browser":"eslint --fix --cache --cache-location .eslintcache.browser --config .eslintrc.browser.json --ignore-pattern src/env/node/**/* \"{src,webviews}/**/*.{ts,tsx}\"","package":"npx vsce package --yarn","test":"yarn run test:preprocess && node ./out/src/test/runTests.js","test:preprocess":"yarn run compile:test && yarn run test:preprocess-gql && yarn run test:preprocess-svg && yarn run test:preprocess-fixtures","browsertest:preprocess":"tsc ./src/test/browser/runTests.ts --outDir ./dist/browser/test --rootDir ./src/test/browser --target es6 --module commonjs","browsertest":"yarn run browsertest:preprocess && node ./dist/browser/test/runTests.js","test:preprocess-gql":"node scripts/preprocess-gql --in src/github/queries.gql --out out/src/github/queries.gql && node scripts/preprocess-gql --in src/github/queriesExtra.gql --out out/src/github/queriesExtra.gql && node scripts/preprocess-gql --in src/github/queriesShared.gql --out out/src/github/queriesShared.gql && node scripts/preprocess-gql --in src/github/queriesLimited.gql --out out/src/github/queriesLimited.gql","test:preprocess-svg":"node scripts/preprocess-svg --in ../resources/ --out out/resources","test:preprocess-fixtures":"node scripts/preprocess-fixtures --in src --out out","update-dts":"cd \"src/@types\" && npx vscode-dts main && npx vscode-dts dev","watch":"webpack --watch --mode development --env esbuild","watch:web":"webpack --watch --mode development --config-name extension:webworker --config-name webviews","hygiene":"node ./build/hygiene.js","prepare":"husky install"},"devDependencies":{"@types/chai":"^4.1.4","@types/glob":"7.1.3","@types/lru-cache":"^5.1.0","@types/marked":"^0.7.2","@types/mocha":"^8.2.2","@types/node":"18.17.1","@types/react":"^16.8.4","@types/react-dom":"^16.8.2","@types/sinon":"7.0.11","@types/temp":"0.8.34","@types/vscode":"1.89.0","@types/webpack-env":"^1.16.0","@typescript-eslint/eslint-plugin":"6.10.0","@typescript-eslint/parser":"6.10.0","@vscode/test-electron":"^2.3.8","@vscode/test-web":"^0.0.29","assert":"^2.0.0","buffer":"^6.0.3","constants-browserify":"^1.0.0","crypto-browserify":"3.12.0","css-loader":"5.1.3","esbuild-loader":"2.10.0","eslint":"7.22.0","eslint-cli":"1.1.1","eslint-plugin-import":"2.22.1","event-stream":"^4.0.1","fork-ts-checker-webpack-plugin":"6.1.1","glob":"7.1.6","graphql":"15.5.0","graphql-tag":"2.11.0","gulp-filter":"^7.0.0","husky":"^8.0.1","jsdom":"19.0.0","jsdom-global":"3.0.2","json5":"2.2.2","merge-options":"3.0.4","minimist":"^1.2.6","mkdirp":"1.0.4","mocha":"^9.0.1","mocha-junit-reporter":"1.23.0","mocha-multi-reporters":"1.1.7","os-browserify":"^0.3.0","p-all":"^1.0.0","path-browserify":"1.0.1","process":"^0.11.10","raw-loader":"4.0.2","react-testing-library":"7.0.1","sinon":"9.0.0","source-map-support":"0.5.19","stream-browserify":"^3.0.0","style-loader":"2.0.0","svg-inline-loader":"^0.8.2","temp":"0.9.4","terser-webpack-plugin":"5.1.1","timers-browserify":"^2.0.12","ts-loader":"8.0.18","tty":"1.0.1","typescript":"4.5.5","typescript-formatter":"^7.2.2","vinyl-fs":"^3.0.3","webpack":"5.76.0","webpack-cli":"4.2.0"},"dependencies":{"@octokit/rest":"18.2.1","@octokit/types":"6.10.1","@vscode/extension-telemetry":"0.7.5","apollo-boost":"^0.4.9","apollo-link-context":"1.0.20","cockatiel":"^3.1.1","cross-fetch":"3.1.5","dayjs":"1.10.4","debounce":"^1.2.1","events":"3.2.0","fast-deep-equal":"^3.1.3","lru-cache":"6.0.0","marked":"^4.0.10","react":"^16.12.0","react-dom":"^16.12.0","ssh-config":"4.1.1","tunnel":"0.0.6","url-search-params-polyfill":"^8.1.1","uuid":"8.3.2","vscode-tas-client":"^0.1.75","vsls":"^0.3.967"},"license":"MIT"},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/github.vscode-pull-request-github-0.90.0-universal","scheme":"file"},"isBuiltin":true,"targetPlatform":"universal","publisherDisplayName":"GitHub","metadata":{"isApplicationScoped":true,"isMachineScoped":true,"isBuiltin":true,"installedTimestamp":1718914821874,"source":"gallery","id":"69ddd764-339a-4ecc-97c1-9c4ece58e36d","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vscode-icons-team.vscode-icons","uuid":"9ccc1dd7-7ec4-4a46-bd4f-7d7b8b9d322a"},"manifest":{"name":"vscode-icons","displayName":"vscode-icons","description":"Icons for Visual Studio Code","version":"12.8.0","publisher":"vscode-icons-team","license":"MIT","author":{"email":"roberto.huertas@outlook.com","name":"Roberto Huertas","url":"https://robertohuertas.com"},"maintainers":[{"email":"jimikar@gmail.com","name":"Jimi (Dimitris) Charalampidis"},{"email":"stevenbojato04@gmail.com","name":"Manuel Bojato","url":"https://kingdarboja.github.io/"}],"repository":{"type":"git","url":"https://github.com/vscode-icons/vscode-icons"},"bugs":{"url":"https://github.com/vscode-icons/vscode-icons/issues","email":"roberto.huertas@outlook.com"},"engines":{"vscode":"^1.71.0","node":">=16.14.2"},"keywords":["icons","theme","icon-theme","multi-root ready","portable mode ready"],"homepage":"https://vscodeicons.team","sponsor":{"url":"https://github.com/sponsors/vscode-icons"},"main":"dist/src/vscode-icons.bundle.js","browser":"dist/src/vscode-icons.web.bundle.js","icon":"images/logo.png","scripts":{"reinstall":"rimraf ./package-lock.json ./node_modules && npm i","format":"prettier --loglevel error --write \"{src,test}/**/*.ts\"","postformat":"npm run lint -- --fix","prebundle:dev":"rimraf --glob ./*.nls*.json","bundle:dev":"node ./out/src/tools/bundle.js","bundle":"npm run bundle:dev -- --release","prebuild":"npm run compile","build":"node ./out/src/tools/build.js \"--release\"","prebuild:dev":"npm run lint && npm run compile:dev","build:dev":"node ./out/src/tools/build.js","pretest":"rimraf ./.nyc_output ./coverage && npm run prebuild:dev","test":"nyc mocha","posttest":"nyc report -r lcov","test:vs":"node ./node_modules/vscode/bin/test","vscode:prepublish":"npm run dist","vscode:uninstall":"node ./dist/src/uninstall.bundle.js","precompile":"rimraf ./out ./dist","compile":"tsc -p tsconfig.prod.json","postcompile":"npm run bundle","compile:w":"npm run compile:dev -- -w","precompile:dev":"npm run precompile","compile:dev":"tsc","postcompile:dev":"npm run bundle:dev","lint":"eslint --ext .ts .","predist":"npm run build","dist":"webpack --mode production","postdist":"nsri create -s .","serve":"vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."},"devDependencies":{"@types/chai":"^4.3.5","@types/glob":"^8.1.0","@types/lodash":"^4.14.196","@types/mocha":"^10.0.1","@types/node":"16","@types/proxyquire":"^1.3.28","@types/semver":"^7.5.0","@types/sinon":"^10.0.16","@types/vscode":"1.71","@types/webpack":"^4.41.22","@typescript-eslint/eslint-plugin":"^6.2.1","@typescript-eslint/parser":"^6.2.1","@vscode/test-web":"^0.0.50","chai":"^4.3.7","eslint":"^8.46.0","eslint-config-prettier":"^9.0.0","eslint-plugin-import":"^2.28.0","eslint-plugin-prettier":"^5.0.0","glob":"^10.3.3","husky":"^8.0.3","mocha":"^10.2.0","nyc":"^15.1.0","prettier":"^3.0.1","proxyquire":"^2.1.3","rimraf":"^5.0.1","sinon":"^15.0.3","ts-node":"^10.9.1","typescript":"^5.1.6","webpack":"^5.88.2","webpack-cli":"^5.1.4"},"dependencies":{"inversify":"^6.0.1","lodash":"^4.17.21","nsri":"^7.0.0","open":"^8.4.2","reflect-metadata":"^0.1.13","semver":"^7.5.4"},"preview":false,"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"categories":["Themes"],"galleryBanner":{"color":"#00558e","theme":"dark"},"extensionKind":["ui","workspace"],"activationEvents":["onStartupFinished"],"contributes":{"iconThemes":[{"id":"vscode-icons","label":"VSCode Icons","path":"dist/src/vsicons-icon-theme.json","_watch":true}],"commands":[{"command":"vscode-icons.activateIcons","title":"Activate VSCode Icons","category":"Icons","callbackName":"activationCommand","enablement":"!isWeb"},{"command":"vscode-icons.regenerateIcons","title":"Apply Icons Customization","category":"Icons","callbackName":"applyCustomizationCommand","enablement":"!isWeb"},{"command":"vscode-icons.ngPreset","title":"Toggle Angular Preset (Workspace Level)","category":"Icons","callbackName":"toggleAngularPresetCommand","enablement":"!isWeb"},{"command":"vscode-icons.nestPreset","title":"Toggle NestJS Preset (Workspace Level)","category":"Icons","callbackName":"toggleNestPresetCommand","enablement":"!isWeb"},{"command":"vscode-icons.jsPreset","title":"Toggle Official JS Preset (User Level)","category":"Icons","callbackName":"toggleJsPresetCommand","enablement":"!isWeb"},{"command":"vscode-icons.tsPreset","title":"Toggle Official TS Preset (User Level)","category":"Icons","callbackName":"toggleTsPresetCommand","enablement":"!isWeb"},{"command":"vscode-icons.jsonPreset","title":"Toggle Official JSON Preset (User Level)","category":"Icons","callbackName":"toggleJsonPresetCommand","enablement":"!isWeb"},{"command":"vscode-icons.hideFoldersPreset","title":"Toggle Folder Icons Visibility (User Level)","category":"Icons","callbackName":"toggleHideFoldersPresetCommand","enablement":"!isWeb"},{"command":"vscode-icons.foldersAllDefaultIconPreset","title":"Toggle Specific Folder Icons (User Level)","category":"Icons","callbackName":"toggleFoldersAllDefaultIconPresetCommand","enablement":"!isWeb"},{"command":"vscode-icons.hideExplorerArrowsPreset","title":"Toggle Explorer Folder Arrows Visibility (User Level)","category":"Icons","callbackName":"toggleHideExplorerArrowsPresetCommand","enablement":"!isWeb"},{"command":"vscode-icons.restoreIcons","title":"Restore Default Icon Manifest","category":"Icons","callbackName":"restoreDefaultManifestCommand","enablement":"!isWeb"},{"command":"vscode-icons.resetProjectDetectionDefaults","title":"Reset Project Detection Defaults","category":"Icons","callbackName":"resetProjectDetectionDefaultsCommand","enablement":"!isWeb"}],"configuration":{"title":"vscode-icons configuration","properties":{"vsicons.dontShowNewVersionMessage":{"type":"boolean","default":false,"description":"If set to 'true', the new version message won't be shown anymore."},"vsicons.dontShowConfigManuallyChangedMessage":{"type":"boolean","default":false,"description":"If set to 'true', when manually changing the configurations, the 'restart' message won't be shown."},"vsicons.projectDetection.autoReload":{"type":"boolean","default":false,"description":"If set to 'true', the extension will restart automatically on project detection."},"vsicons.projectDetection.disableDetect":{"type":"boolean","default":false,"description":"If set to 'true', the extension will disable the project detection."},"vsicons.presets.angular":{"type":"boolean","default":false,"description":"If set to 'true', the extension will match some of the common Angular patterns."},"vsicons.presets.nestjs":{"type":"boolean","default":false,"description":"If set to 'true', the extension will match some of the common NestJS patterns."},"vsicons.presets.jsOfficial":{"type":"boolean","default":false,"description":"If set to 'true', the extension will use the official JS icon."},"vsicons.presets.tsOfficial":{"type":"boolean","default":false,"description":"If set to 'true', the extension will use the official TS icon."},"vsicons.presets.jsonOfficial":{"type":"boolean","default":false,"description":"If set to 'true', the extension will use the official JSON icon."},"vsicons.presets.hideFolders":{"type":"boolean","default":false,"description":"If set to 'true', all folders will be hidden."},"vsicons.presets.foldersAllDefaultIcon":{"type":"boolean","default":false,"description":"If set to 'true', all folders will have the default folder icon."},"vsicons.presets.hideExplorerArrows":{"type":"boolean","default":false,"description":"If set to 'true', the extension will hide the folder arrows in the 'Explorer'."},"vsicons.customIconFolderPath":{"type":"string","default":"","description":"The physical path to the parent folder where the custom icons folder resides on your local machine."},"vsicons.associations.files":{"type":"array","default":[],"description":"These custom associations will override the file icon associations defined by default."},"vsicons.associations.folders":{"type":"array","default":[],"description":"These custom associations will override the folder icon associations defined by default."},"vsicons.associations.fileDefault.file":{"type":"object","default":null,"description":"This setting will let you change the default file icon for dark themes."},"vsicons.associations.fileDefault.file_light":{"type":"object","default":null,"description":"This setting will let you change the default file icon for light themes."},"vsicons.associations.folderDefault.folder":{"type":"object","default":null,"description":"This setting will let you change the default folder icon for dark themes."},"vsicons.associations.folderDefault.root_folder":{"type":"object","default":null,"description":"This setting will let you change the default root folder icon for dark themes."},"vsicons.associations.folderDefault.folder_light":{"type":"object","default":null,"description":"This setting will let you change the default folder icon for light themes."},"vsicons.associations.folderDefault.root_folder_light":{"type":"object","default":null,"description":"This setting will let you change the default root folder icon for light themes."}}}}},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/vscode-icons-team.vscode-icons-12.8.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"vscode-icons-team","metadata":{"isApplicationScoped":false,"installedTimestamp":1718914849022,"pinned":false,"source":"gallery","id":"9ccc1dd7-7ec4-4a46-bd4f-7d7b8b9d322a","publisherId":"652ad61d-3a6a-48ca-ab1a-80dc8953b2b6","publisherDisplayName":"vscode-icons-team","targetPlatform":"universal","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"gruntfuggly.todo-tree","uuid":"261cac81-cd7b-4555-bb41-0c2d2bcd3e70"},"manifest":{"name":"todo-tree","displayName":"Todo Tree","description":"Show TODO, FIXME, etc. comment tags in a tree view","keywords":["todo","task","tasklist","multi-root ready"],"version":"0.0.215","license":"MIT","icon":"resources/todo-tree.png","publisher":"Gruntfuggly","engines":{"vscode":"^1.46.0"},"repository":"https://github.com/Gruntfuggly/todo-tree","bugs":{"url":"https://github.com/Gruntfuggly/todo-tree/issues","email":"gruntfuggly@googlemail.com"},"scripts":{"test":"./node_modules/node-qunit/bin/cli.js -c src/utils.js -t test/tests.js","vscode:prepublish":"./buildCodiconNames.js && webpack --mode production","webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch"},"categories":["Other"],"activationEvents":["onStartupFinished"],"main":"./dist/extension","contributes":{"viewsContainers":{"activitybar":[{"id":"todo-tree-container","title":"TODOs","icon":"resources/todo-tree-container.svg"}]},"views":{"todo-tree-container":[{"id":"todo-tree-view","name":"TODOs","when":"!todo-tree-is-empty"}]},"menus":{"view/title":[{"command":"todo-tree.exportTree","when":"view =~ /todo-tree/ && todo-tree-show-export-button == true","group":"navigation@1"},{"command":"todo-tree.reveal","when":"view =~ /todo-tree/ && todo-tree-tags-only == false && todo-tree-show-reveal-button == true","group":"navigation@2"},{"command":"todo-tree.scanOpenFilesOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'workspace only' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.scanCurrentFileOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'open files' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.scanWorkspaceAndOpenFiles","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'current file' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.scanWorkspaceOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'workspace' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.showFlatView","when":"view =~ /todo-tree/ && todo-tree-flat == false && todo-tree-tags-only == false && todo-tree-show-view-style-button == true","group":"navigation@4"},{"command":"todo-tree.showTagsOnlyView","when":"view =~ /todo-tree/ && todo-tree-flat == true && todo-tree-tags-only == false && todo-tree-show-view-style-button == true","group":"navigation@4"},{"command":"todo-tree.showTreeView","when":"view =~ /todo-tree/ && todo-tree-flat == false && todo-tree-tags-only == true && todo-tree-show-view-style-button == true","group":"navigation@4"},{"command":"todo-tree.groupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == false && todo-tree-show-group-by-tag-button == true","group":"navigation@5"},{"command":"todo-tree.ungroupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == true && todo-tree-show-group-by-tag-button == true","group":"navigation@5"},{"command":"todo-tree.groupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == false && todo-tree-show-group-by-sub-tag-button == true && todo-tree-has-sub-tags == true","group":"navigation@6"},{"command":"todo-tree.ungroupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == true && todo-tree-show-group-by-sub-tag-button == true && todo-tree-has-sub-tags == true","group":"navigation@6"},{"command":"todo-tree.filter","when":"view =~ /todo-tree/ && todo-tree-filtered == false && todo-tree-show-filter-button == true","group":"navigation@7"},{"command":"todo-tree.filterClear","when":"view =~ /todo-tree/ && todo-tree-filtered == true && todo-tree-show-filter-button == true","group":"navigation@7"},{"command":"todo-tree.refresh","when":"view =~ /todo-tree/ && todo-tree-show-refresh-button == true","group":"navigation@8"},{"command":"todo-tree.expand","when":"view =~ /todo-tree/ && todo-tree-expanded == false && todo-tree-show-expand-button == true","group":"navigation@9"},{"command":"todo-tree.collapse","when":"view =~ /todo-tree/ && todo-tree-expanded == true && todo-tree-show-expand-button == true","group":"navigation@9"}],"view/item/context":[{"command":"todo-tree.filter","when":"view =~ /todo-tree/ && todo-tree-filtered == false","group":"1-filters@1"},{"command":"todo-tree.filterClear","when":"view =~ /todo-tree/ && todo-tree-global-filter-active","group":"1-filters@2"},{"command":"todo-tree.excludeThisFolder","when":"view =~ /todo-tree/ && viewItem == folder","group":"1-filters@3"},{"command":"todo-tree.excludeThisFile","when":"view =~ /todo-tree/ && viewItem == file","group":"1-filters@4"},{"command":"todo-tree.showOnlyThisFolder","when":"view =~ /todo-tree/ && viewItem == folder","group":"1-filters@5"},{"command":"todo-tree.showOnlyThisFolderAndSubfolders","when":"view =~ /todo-tree/ && viewItem == folder","group":"1-filters@6"},{"command":"todo-tree.removeFilter","when":"view =~ /todo-tree/ && todo-tree-folder-filter-active","group":"1-filters@7"},{"command":"todo-tree.resetAllFilters","when":"view =~ /todo-tree/ && todo-tree-folder-filter-active","group":"1-filters@8"},{"command":"todo-tree.toggleItemCounts","when":"view =~ /todo-tree/","group":"2-toggles"},{"command":"todo-tree.toggleBadges","when":"view =~ /todo-tree/","group":"2-toggles"},{"command":"todo-tree.toggleCompactFolders","when":"view =~/todo-tree/ && todo-tree-can-toggle-compact-folders == true","group":"2-toggles"},{"command":"todo-tree.scanOpenFilesOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'open files'","group":"3-view"},{"command":"todo-tree.scanCurrentFileOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'current file'","group":"3-view"},{"command":"todo-tree.scanWorkspaceAndOpenFiles","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'workspace'","group":"3-view"},{"command":"todo-tree.scanWorkspaceOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'workspace only'","group":"3-view"},{"command":"todo-tree.expand","when":"view =~ /todo-tree/ && todo-tree-expanded == false","group":"4-tree@1"},{"command":"todo-tree.collapse","when":"view =~ /todo-tree/ && todo-tree-expanded == true","group":"4-tree@1"},{"command":"todo-tree.showFlatView","when":"view =~ /todo-tree/ && todo-tree-flat == false","group":"4-tree@2"},{"command":"todo-tree.showTagsOnlyView","when":"view =~ /todo-tree/ && todo-tree-tags-only == false","group":"4-tree@3"},{"command":"todo-tree.showTreeView","when":"view =~ /todo-tree/ && todo-tree-flat == true || todo-tree-tags-only == true","group":"4-tree@4"},{"command":"todo-tree.groupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == false","group":"4-tree@5"},{"command":"todo-tree.ungroupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == true","group":"4-tree@5"},{"command":"todo-tree.groupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == false && todo-tree-has-sub-tags == true","group":"4-tree@6"},{"command":"todo-tree.ungroupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == true && todo-tree-has-sub-tags == true","group":"4-tree@6"},{"command":"todo-tree.exportTree","when":"view =~/todo-tree/","group":"5-misc1"},{"command":"todo-tree.reveal","when":"view =~/todo-tree/","group":"6-misc2"}],"commandPalette":[{"command":"todo-tree.showOnlyThisFolder","when":"false"},{"command":"todo-tree.showOnlyThisFolderAndSubfolders","when":"false"},{"command":"todo-tree.excludeThisFolder","when":"false"},{"command":"todo-tree.excludeThisFile","when":"false"}]},"commands":[{"command":"todo-tree.showFlatView","title":"Show Flat View","category":"Todo Tree","icon":"$(list-unordered)"},{"command":"todo-tree.showTagsOnlyView","title":"Show Tags Only View","category":"Todo Tree","icon":"$(list-flat)"},{"command":"todo-tree.showTreeView","title":"Show Tree View","category":"Todo Tree","icon":"$(list-tree)"},{"command":"todo-tree.refresh","title":"Refresh","category":"Todo Tree","icon":"$(refresh)"},{"command":"todo-tree.expand","title":"Expand Tree","category":"Todo Tree","icon":"$(expand-all)","enablement":"todo-tree-collapsible"},{"command":"todo-tree.collapse","title":"Collapse Tree","category":"Todo Tree","icon":"$(collapse-all)","enablement":"todo-tree-collapsible"},{"command":"todo-tree.filter","title":"Filter Tree","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.filterClear","title":"Clear Tree Filter","category":"Todo Tree","icon":"$(clear-all)"},{"command":"todo-tree.groupByTag","title":"Group by Tag","category":"Todo Tree","icon":"$(tag)"},{"command":"todo-tree.ungroupByTag","title":"Ungroup by Tag","category":"Todo Tree","icon":"$(unfold)"},{"command":"todo-tree.groupBySubTag","title":"Group by Sub Tag","category":"Todo Tree","icon":"$(chrome-restore)"},{"command":"todo-tree.ungroupBySubTag","title":"Ungroup by Sub Tag","category":"Todo Tree","icon":"$(chrome-maximize)"},{"command":"todo-tree.scanOpenFilesOnly","title":"Scan Open Files Only","category":"Todo Tree","icon":"$(files)"},{"command":"todo-tree.scanCurrentFileOnly","title":"Scan Current File Only","category":"Todo Tree","icon":"$(symbol-file)"},{"command":"todo-tree.scanWorkspaceAndOpenFiles","title":"Scan Workspace And Open Files","category":"Todo Tree","icon":"$(folder-active)"},{"command":"todo-tree.scanWorkspaceOnly","title":"Scan Workspace Only","category":"Todo Tree","icon":"$(folder)"},{"command":"todo-tree.addTag","title":"Add Tag","category":"Todo Tree"},{"command":"todo-tree.removeTag","title":"Remove Tag","category":"Todo Tree"},{"command":"todo-tree.exportTree","title":"Export Tree","category":"Todo Tree","icon":"$(save)"},{"command":"todo-tree.showOnlyThisFolder","title":"Only Show This Folder","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.showOnlyThisFolderAndSubfolders","title":"Only Show This Folder And Subfolders","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.switchScope","title":"Switch Scope","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.excludeThisFolder","title":"Hide This Folder","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.excludeThisFile","title":"Hide This File","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.removeFilter","title":"Remove Filter","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.resetAllFilters","title":"Reset All Filters","category":"Todo Tree","icon":"$(clear-all)"},{"command":"todo-tree.reveal","title":"Reveal Current File In Tree","category":"Todo Tree","icon":"$(location)"},{"command":"todo-tree.resetCache","title":"Reset Cache","category":"Todo Tree"},{"command":"todo-tree.toggleItemCounts","title":"Toggle Item Counts","category":"Todo Tree"},{"command":"todo-tree.toggleBadges","title":"Toggle Badges","category":"Todo Tree"},{"command":"todo-tree.toggleCompactFolders","title":"Toggle Compact Folders","category":"Todo Tree"}],"configuration":[{"title":"General","order":1,"type":"object","properties":{"todo-tree.general.debug":{"default":false,"markdownDescription":"Create a debug channel in the Output view.","type":"boolean"},"todo-tree.general.enableFileWatcher":{"default":false,"markdownDescription":"Set to true to enable automatic updates when files in the workspace are created, changed or deleted.","type":"boolean"},"todo-tree.general.fileWatcherGlob":{"default":"**/*","markdownDescription":"Glob for use with the file watcher. Change this if the default setting causes performance issues.","type":"string"},"todo-tree.general.revealBehaviour":{"default":"start of todo","enum":["start of line","start of todo","end of todo"],"markdownDescription":"Sets where the cursor is positioned when revealing a todo.","markdownEnumDescriptions":["Moves the cursor to the start of the line","Moves the cursor to the beginning of the todo","Moves the cursor to the end of the todo"],"type":"string"},"todo-tree.general.exportPath":{"default":"~/todo-tree-%Y%m%d-%H%M.txt","markdownDescription":"Path to use when exporting the tree. Environment variables will be expanded, e.g `${HOME}` and the path is passed through strftime (see <https://github.com/samsonjs/strftime>). Set the extension to `.json` to export as a JSON record.","type":"string"},"todo-tree.general.rootFolder":{"default":"","markdownDescription":"Folder in which to run the search (defaults to the workspace folder).","type":"string"},"todo-tree.general.schemes":{"default":["file","ssh","untitled","vscode-notebook-cell"],"items":{"type":"string"},"markdownDescription":"Editor schemes to find TODOs in. To find TODOs in settings files, for instance, add `vscode-userdata` or for output windows, add `output`.","type":"array"},"todo-tree.general.statusBar":{"default":"none","enum":["none","total","tags","top three","current file"],"markdownDescription":"What to show in the status bar - nothing, total count, counts per tag, top three counts per tag or count of tags in the current file.","markdownEnumDescriptions":["Only show the scanning status in the status bar","Show the total count of tags in the status bar","Show a breakdown of the count of each tag in the status bar","Show the count of the top three tags in the status bar","Show the count of tags in the current file in the status bar"],"type":"string"},"todo-tree.general.showIconsInsteadOfTagsInStatusBar":{"default":false,"markdownDescription":"Show icons instead of tags in the status bar","type":"boolean"},"todo-tree.general.statusBarClickBehaviour":{"default":"reveal","enum":["cycle","reveal","toggle highlights"],"markdownDescription":"What to do when the status bar is clicked.","markdownEnumDescriptions":["Toggle between showing total count and the top three tag counts","Reveal the tree view","Toggle highlighting"],"type":"string"},"todo-tree.general.tagGroups":{"default":{},"markdownDescription":"Allows similar tags to be grouped under the same type, e.g. `{ \"FIX\": [\"FIXME\",\"FIXIT\"] }`. *Note: All tags must also be in the `todo-tree.general.tags` tag list. If a tag group is defined, custom highlights apply to the group, not the tags within the group.*","type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}},"todo-tree.general.tags":{"default":["BUG","HACK","FIXME","TODO","XXX","[ ]","[x]"],"items":{"type":"string"},"markdownDescription":"List of tags. *Note, if one tag starts with another tag, the longer tag should be specified first to prevent the shorter tag being matched.*","type":"array"}}},{"title":"Highlights","order":2,"type":"object","properties":{"todo-tree.highlights.customHighlight":{"default":{"BUG":{"icon":"bug"},"HACK":{"icon":"tools"},"FIXME":{"icon":"flame"},"XXX":{"icon":"$(close)"}},"markdownDescription":"Custom configuration for highlighting, [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting).","type":"object","additionalProperties":{"type":"object","properties":{"foreground":{"type":"string","format":"color-hex"},"background":{"type":"string","format":"color-hex"},"opacity":{"type":"number"},"fontWeight":{"type":"string"},"fontStyle":{"type":"string"},"textDecoration":{"type":"string"},"borderRadius":{"type":"string"},"icon":{"type":"string"},"iconColour":{"type":"string","format":"color-hex"},"gutterIcon":{"type":"boolean"},"rulerColour":{"type":"string","format":"color-hex"},"rulerOpacity":{"type":"number"},"rulerLane":{"type":"string","enum":["none","left","center","right","full"]},"type":{"type":"string","enum":["tag","text","tag-and-comment","tag-and-subTag","text-and-comment","line","whole-line","none"]},"hideFromTree":{"type":"boolean"},"hideFromStatusBar":{"type":"boolean"}}}},"todo-tree.highlights.defaultHighlight":{"default":{},"markdownDescription":"Default configuration for highlighting. [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting).","type":"object","properties":{"foreground":{"type":"string","format":"color-hex"},"background":{"type":"string","format":"color-hex"},"opacity":{"type":"number"},"fontWeight":{"type":"string"},"fontStyle":{"type":"string"},"textDecoration":{"type":"string"},"borderRadius":{"type":"string"},"icon":{"type":"string"},"iconColour":{"type":"string","format":"color-hex"},"gutterIcon":{"type":"boolean"},"rulerColour":{"type":"string","format":"color-hex"},"rulerOpacity":{"type":"number"},"rulerLane":{"type":"string","enum":["none","left","center","right","full"]},"type":{"type":"string","enum":["tag","text","tag-and-comment","tag-and-subTag","text-and-comment","line","whole-line","none"]},"hideFromTree":{"type":"boolean"},"hideFromStatusBar":{"type":"boolean"}}},"todo-tree.highlights.enabled":{"default":true,"markdownDescription":"Set to false to disable highlighting.","type":"boolean"},"todo-tree.highlights.highlightDelay":{"default":500,"markdownDescription":"Delay before highlighting tags within files (milliseconds).","type":"integer"},"todo-tree.highlights.useColourScheme":{"default":false,"markdownDescription":"Use a colour scheme to colour the tags. This scheme is applied to the tags in the order of tags. The colours can be modified using `todo-tree.highlights.foregroundColourScheme` and `todo-tree.highlights.backgroundColourScheme`. The colour scheme overrides colours in the default highlight, but not the custom highlight.","type":"boolean","scope":"language-overridable"},"todo-tree.highlights.foregroundColourScheme":{"default":["white","black","black","white","white","white","black"],"items":{"type":"string"},"markdownDescription":"A list of colours which is applied to tag highlights in the same order as the tags. Repeats if necessary and is overridden by `todo-tree.highlights.customHighlight`.","type":"array"},"todo-tree.highlights.backgroundColourScheme":{"default":["red","orange","yellow","green","blue","indigo","violet"],"items":{"type":"string"},"markdownDescription":"A list of colours which is applied to tag highlights in the same order as the tags. Repeats if necessary and is overridden by `todo-tree.highlights.customHighlight`.","type":"array"}}},{"title":"Filtering","order":3,"type":"object","properties":{"todo-tree.filtering.excludedWorkspaces":{"default":[],"items":{"type":"string"},"markdownDescription":"An array of workspace names to exclude as roots in the tree (wildcards can be used).","type":"array"},"todo-tree.filtering.excludeGlobs":{"default":["**/node_modules"],"items":{"type":"string"},"markdownDescription":"Globs for use in limiting search results by exclusion (applied after **includeGlobs**), e.g. `[\"**/*.txt\"]` to ignore all .txt files.","type":"array"},"todo-tree.filtering.ignoreGitSubmodules":{"default":false,"markdownDescription":"If true, any subfolders containing a .git file will be ignored when searching.","type":"boolean"},"todo-tree.filtering.includedWorkspaces":{"default":[],"items":{"type":"string"},"markdownDescription":"An array of workspace names to include as roots in the tree (wildcards can be used). An empty array includes all workspace folders.","type":"array"},"todo-tree.filtering.includeGlobs":{"default":[],"items":{"type":"string"},"markdownDescription":"Globs for use in limiting search results by inclusion, e.g. `[\"**/unit-tests/*.js\"]` to only show .js files in unit-tests subfolders.","type":"array"},"todo-tree.filtering.includeHiddenFiles":{"default":false,"markdownDescription":"Include hidden files (starting with a .).","type":"boolean"},"todo-tree.filtering.passGlobsToRipgrep":{"default":true,"markdownDescription":"By default the globs are passed into ripgrep to narrow the search. Set this to false to apply the globs *after* the search (pre 0.0.132 behaviour).","type":"boolean"},"todo-tree.filtering.scopes":{"default":[],"markdownDescription":"Scopes (sets of globs) that can be switched between","type":"array"},"todo-tree.filtering.useBuiltInExcludes":{"default":"none","enum":["none","file excludes","search excludes","file and search excludes"],"markdownDescription":"Add VSCode's `files.exclude` and/or `search.exclude` list to the ignored paths.","markdownEnumDescriptions":["Don't used any built in excludes","Use the Files:Exclude setting","Use the Search:Exclude setting","Use the Files:Exclude and the Search:Exclude setting"],"type":"string"}}},{"title":"Tree","order":4,"type":"object","properties":{"todo-tree.tree.autoRefresh":{"default":true,"markdownDescription":"Refresh the tree when files are opened or saved.","type":"boolean"},"todo-tree.tree.disableCompactFolders":{"default":false,"markdownDescription":"Prevent the tree from showing compact folders.","type":"boolean"},"todo-tree.tree.expanded":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially fully expanded.","type":"boolean"},"todo-tree.tree.filterCaseSensitive":{"default":false,"markdownDescription":"Set to true if you want the view filtering to be case sensitive.","type":"boolean"},"todo-tree.tree.flat":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially as flat list of files.","type":"boolean"},"todo-tree.tree.groupedByTag":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially grouped by tag.","type":"boolean"},"todo-tree.tree.groupedBySubTag":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially grouped by sub tag.","type":"boolean"},"todo-tree.tree.hideIconsWhenGroupedByTag":{"default":false,"markdownDescription":"Save some space by hiding the item icons when grouped by tag.","type":"boolean"},"todo-tree.tree.hideTreeWhenEmpty":{"default":false,"markdownDescription":"Hide the view if it is empty.","type":"boolean"},"todo-tree.tree.labelFormat":{"default":"${tag} ${after}","markdownDescription":"Format for tree items.","type":"string"},"todo-tree.tree.scanAtStartup":{"default":true,"markdownDescription":"Normally the tree is built as soon as the window is opened. If you have a large code base and want to manually start the scan, set this to false.","type":"boolean"},"todo-tree.tree.scanMode":{"default":"workspace","enum":["workspace","open files","current file","workspace only"],"markdownDescription":"Set this to change which files are scanned.","markdownEnumDescriptions":["Scan the whole workspace (or workspaces) and open file","Scan open files only","Scan the current file only","Scan the workspace but don't refresh files open in the editor"],"type":"string"},"todo-tree.tree.showBadges":{"default":true,"markdownDescription":"Show badges and SCM state in the tree view.","type":"boolean"},"todo-tree.tree.showCountsInTree":{"default":false,"markdownDescription":"Show counts of TODOs in the tree.","type":"boolean"},"todo-tree.tree.showInExplorer":{"default":false,"deprecationMessage":"This setting is no longer used. Please drag the view to move it.","type":"boolean"},"todo-tree.tree.showCurrentScanMode":{"default":true,"markdownDescription":"Show the current scan mode at the top of the tree view","type":"boolean"},"todo-tree.tree.showScanOpenFilesOrWorkspaceButton":{"default":false,"deprecationMessage":"This setting is no longer used, please use \"todo-tree.tree.scanMode\" instead.","type":"boolean"},"todo-tree.tree.subTagClickUrl":{"default":"","markdownDescription":"The URL to open when clicking on a sub tag in the tree. Can include placeholders as defined in `todo-tree.tree.labelFormat`.","type":"string"},"todo-tree.tree.showTagsFromOpenFilesOnly":{"default":false,"deprecationMessage":"This setting is no longer used, please use \"todo-tree.tree.scanMode\" instead.","type":"boolean"},"todo-tree.tree.sortTagsOnlyViewAlphabetically":{"default":false,"markdownDescription":"Sort items in the tags only view alphabetically instead of by file and line number.","type":"boolean"},"todo-tree.tree.sort":{"default":true,"markdownDescription":"ripgrep searches using multiple threads to improve performance. The tree is sorted when it is populated so that it stays stable. If you want to use ripgrep's own sort arguments, set this to false.","type":"boolean"},"todo-tree.tree.tagsOnly":{"default":false,"markdownDescription":"When opening new workspaces, show only tag elements in tree.","type":"boolean"},"todo-tree.tree.tooltipFormat":{"default":"${filepath}, line ${line}","markdownDescription":"Tree item tooltip format.","type":"string"},"todo-tree.tree.trackFile":{"default":true,"markdownDescription":"Track the current file in the tree view.","type":"boolean"}}},{"title":"Buttons","order":5,"type":"object","properties":{"todo-tree.tree.buttons.reveal":{"default":true,"markdownDescription":"Show a button in the tree view title bar to reveal the current item (only when track file is not enabled).","type":"boolean"},"todo-tree.tree.buttons.scanMode":{"default":false,"markdownDescription":"Show a button in the tree view title bar to change the Scan Mode setting.","type":"boolean"},"todo-tree.tree.buttons.viewStyle":{"default":true,"markdownDescription":"Show a button in the tree view title bar to change the view style (tree, flat or tags only).","type":"boolean"},"todo-tree.tree.buttons.groupByTag":{"default":true,"markdownDescription":"Show a button in the tree view title bar to enable grouping items by tag.","type":"boolean"},"todo-tree.tree.buttons.groupBySubTag":{"default":false,"markdownDescription":"Show a button in the tree view title bar to enable grouping items by sub tag.","type":"boolean"},"todo-tree.tree.buttons.filter":{"default":true,"markdownDescription":"Show a button in the tree view title bar allowing the tree to be filtered by entering some text.","type":"boolean"},"todo-tree.tree.buttons.refresh":{"default":true,"markdownDescription":"Show a refresh button in the tree view title bar.","type":"boolean"},"todo-tree.tree.buttons.expand":{"default":true,"markdownDescription":"Show a button in the tree view title bar to expand or collapse the whole tree.","type":"boolean"},"todo-tree.tree.buttons.export":{"default":false,"markdownDescription":"Show a button in the tree view title bar to create a file showing the tree content.","type":"boolean"}}},{"title":"Regex","order":6,"type":"object","properties":{"todo-tree.regex.regex":{"default":"(//|#|<!--|;|/\\*|^|^[ \\t]*(-|\\d+.))\\s*($TAGS)","markdownDescription":"Regular expression for matching TODOs. Note: **($TAGS)** will be replaced by the expanded tag list. For some of the extension features to work, **($TAGS)** should be present in the regex, however, the basic functionality should still work if you need to explicitly expand the tag list.","type":"string","minLength":1},"todo-tree.regex.regexCaseSensitive":{"default":true,"markdownDescription":"Use a case sensitive regular expression.","type":"boolean"},"todo-tree.regex.subTagRegex":{"default":"","markdownDescription":"Regular expression for processing the text to the right of the tag, e.g. for extracting a sub tag, or removing unwanted characters.","type":"string"},"todo-tree.regex.enableMultiLine":{"default":false,"markdownDescription":"Force the regex to match over multiple lines. Allows use of `[\\s\\S]` to match anything including newlines.","type":"boolean"},"todo-tree.ripgrep.ripgrep":{"default":"","markdownDescription":"Location of your version of ripgrep.","type":"string"},"todo-tree.ripgrep.ripgrepArgs":{"default":"--max-columns=1000 --no-config ","markdownDescription":"Additional arguments to pass to ripgrep (Use with caution!).","type":"string"}}},{"title":"Ripgrep","order":7,"type":"object","properties":{"todo-tree.ripgrep.ripgrepMaxBuffer":{"default":200,"markdownDescription":"Size of the buffer to use for retrieving output from ripgrep (kilobytes).","type":"integer"},"todo-tree.ripgrep.usePatternFile":{"default":true,"markdownDescription":"A pattern file is used with ripgrep by default. If you experience issues with deleting the pattern file, set this to false to use the legacy method of providing the regex to ripgrep.","type":"boolean"}}}]},"dependencies":{"@primer/octicons":"^11.0.0","comment-patterns":"^0.10.1","fast-strftime":"^1.1.1","find":"^0.3.0","micromatch":"^4.0.2","node-qunit":"^2.0.0","regexp-match-indices":"^1.0.2","treeify":"^1.1.0"},"devDependencies":{"parse-code-context":"^1.0.0","webpack":"^4.43.0","webpack-cli":"^4.9.1"}},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/gruntfuggly.todo-tree-0.0.215-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Gruntfuggly","metadata":{"isApplicationScoped":false,"installedTimestamp":1718914849038,"pinned":false,"source":"gallery","id":"261cac81-cd7b-4555-bb41-0c2d2bcd3e70","publisherId":"d4906d2e-f2ee-492d-9c7c-02b6160599ec","publisherDisplayName":"Gruntfuggly","targetPlatform":"universal","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"oderwat.indent-rainbow","uuid":"eaa2127d-cb69-4ab9-8505-a60c9ee5f28b"},"manifest":{"name":"indent-rainbow","description":"Makes indentation easier to read","version":"8.3.1","publisher":"oderwat","author":{"name":"Hans Raaf"},"icon":"assets/icon.png","license":"MIT","engines":{"vscode":"^1.52.0"},"repository":{"url":"https://github.com/oderwat/vscode-indent-rainbow.git","type":"git"},"bugs":{"url":"https://github.com/oderwat/vscode-indent-rainbow/issues"},"categories":["Other"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"Indent-Rainbow configuration","properties":{"indentRainbow.includedLanguages":{"type":"array","default":[],"description":"For which languages indent-rainbow should be activated. When empty will use for all languages."},"indentRainbow.excludedLanguages":{"type":"array","default":["plaintext"],"description":"For which languages indent-rainbow should be deactivated. When left empty will ignore."},"indentRainbow.ignoreErrorLanguages":{"type":"array","default":["markdown"],"description":"For which languages indent-rainbow should skip indent error detection (use '*' to deactivate errors for all languages)."},"indentRainbow.updateDelay":{"type":"integer","default":100,"description":"The delay in ms until the editor gets updated."},"indentRainbow.indentSetter":{"type":"object","default":{},"description":"Automatically change indent settings for languages (see README.md for details)."},"indentRainbow.errorColor":{"type":"string","default":"rgba(128,32,32,0.6)","description":"Indent color for when there is an error in the indentation, for example if you have your tabs set to 2 spaces but the indent is 3 spaces. Can be any type of web based color format (hex, rgba, rgb)."},"indentRainbow.tabmixColor":{"type":"string","default":"rgba(128,32,96,0.6)","description":"Indent color for when there is a mix between spaces and tabs in the indentation. Can be any type of web based color format (hex, rgba, rgb) or a empty string(to be disabled this coloring)."},"indentRainbow.ignoreLinePatterns":{"type":"array","default":["/[ \t]* [*]/g","/[ \t]+[/]{2}/g"],"description":"Skip error highlighting for RegEx patterns. Defaults to c/cpp decorated block and full line comments."},"indentRainbow.colors":{"type":"array","default":["rgba(255,255,64,0.07)","rgba(127,255,127,0.07)","rgba(255,127,255,0.07)","rgba(79,236,236,0.07)"],"description":"An array with color (hex, rgba, rgb) strings which are used as colors, can be any length."},"indentRainbow.colorOnWhiteSpaceOnly":{"type":"boolean","default":false,"description":"If error color is disabled, indent colors will be rendered until the length of rendered characters (white spaces, tabs, and other ones) is divisible by tabsize. Turn on this option to render white spaces and tabs only."},"indentRainbow.indicatorStyle":{"type":"string","default":"classic","enum":["classic","light"],"markdownDescription":"Classic mode uses a full colored tab to indicate the indendation. Light mode will only display a colored border similar to the default indent guide lines. You can disable the default indicators with `#editor.guides.indentation#`."},"indentRainbow.lightIndicatorStyleLineWidth":{"type":"number","default":1,"description":"This property defines the indent indicator lineWidth when using light mode."}}}},"browser":"./dist/web/extension.js","main":"./out/src/extension","scripts":{"vscode:prepublish":"npm run compile && npm run package-web","compile":"tsc -p ./","watch":"tsc -watch -p ./","pretest":"npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js","compile-web":"webpack --config ./build/web-extension.webpack.config.js","watch-web":"webpack --watch --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --devtool hidden-source-map --config ./build/web-extension.webpack.config.js"},"devDependencies":{"@types/glob":"^7.1.3","@types/mocha":"^8.0.4","@types/node":"^12.11.7","@types/vscode":"^1.52.0","@typescript-eslint/eslint-plugin":"^4.11.1","@typescript-eslint/parser":"^4.11.1","eslint":"^7.16.0","glob":"^7.1.6","mocha":"^9.1.4","ts-loader":"^9.2.3","typescript":"^4.1.2","vscode-test":"^1.4.1","webpack":"^5.45.1","webpack-cli":"^4.7.2"},"dependencies":{"@vscode/test-web":"^0.0.8"}},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/oderwat.indent-rainbow-8.3.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"oderwat","metadata":{"isApplicationScoped":false,"installedTimestamp":1718914849030,"pinned":false,"source":"gallery","id":"eaa2127d-cb69-4ab9-8505-a60c9ee5f28b","publisherId":"ac064ae0-224d-4351-9aa4-45ef7bf3ed21","publisherDisplayName":"oderwat","targetPlatform":"universal","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"adpyke.codesnap","uuid":"8c1fc960-44b1-45e8-89b5-85f982fdaf27"},"manifest":{"name":"codesnap","displayName":"CodeSnap","description":"📷 Take beautiful screenshots of your code","version":"1.3.4","repository":{"type":"git","url":"https://github.com/kufii/CodeSnap"},"publisher":"adpyke","icon":"icon.png","license":"MIT","engines":{"vscode":"^1.52.0"},"keywords":["screenshot","snippet","snap","clipboard","share","polacode","carbon","codesnap"],"categories":["Other"],"activationEvents":["onCommand:codesnap.start"],"main":"./src/extension.js","contributes":{"commands":[{"command":"codesnap.start","title":"CodeSnap 📸"}],"menus":{"editor/context":[{"command":"codesnap.start"}]},"configuration":{"type":"object","title":"CodeSnap","properties":{"codesnap.backgroundColor":{"scope":"resource","type":"string","default":"#abb8c3","description":"The background color of the snippet's container"},"codesnap.boxShadow":{"scope":"resource","type":"string","default":"rgba(0, 0, 0, 0.55) 0px 20px 68px","description":"The CSS box-shadow for the snippet"},"codesnap.containerPadding":{"scope":"resource","type":"string","default":"3em","description":"The padding for the snippet's container"},"codesnap.roundedCorners":{"scope":"resource","type":"boolean","default":true,"description":"Use rounded corners for the window"},"codesnap.showWindowControls":{"scope":"resource","type":"boolean","default":true,"description":"Display OS X style window controls"},"codesnap.showWindowTitle":{"scope":"resource","type":"boolean","default":false,"description":"Display window title with open folder / file name"},"codesnap.showLineNumbers":{"scope":"resource","type":"boolean","default":true,"description":"Display line numbers"},"codesnap.realLineNumbers":{"scope":"resource","type":"boolean","default":false,"description":"Start from the selection's line number instead of 1"},"codesnap.transparentBackground":{"scope":"resource","type":"boolean","default":false,"description":"Use a transparent background when taking the screenshot"},"codesnap.target":{"scope":"resource","type":"string","enum":["container","window"],"default":"container","description":"Take the shot with or without the container"},"codesnap.shutterAction":{"scope":"resource","type":"string","enum":["save","copy"],"default":"save","description":"The behavior of the shutter button"}}}},"scripts":{"lint":"eslint .","format":"prettier --write \"**/*.{js,jsx,md,json,css,prettierrc,eslintrc,html}\"","check:format":"prettier --check \"**/*.{js,jsx,md,json,css,prettierrc,eslintrc,html}\"","check":"npm run lint && npm run check:format"},"devDependencies":{"eslint":"^7.24.0","eslint-config-adpyke-es6":"^1.4.13","eslint-config-prettier":"^8.2.0","prettier":"^2.2.1","@types/vscode":"^1.52.0","@types/glob":"^7.1.3","@types/mocha":"^8.2.2","@types/node":"^14.14.40","glob":"^7.1.6","mocha":"^8.3.2","typescript":"^4.2.4","vscode-test":"^1.5.2"},"dependencies":{"dom-to-image-even-more":"^1.0.4"}},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/adpyke.codesnap-1.3.4-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"adpyke","metadata":{"isApplicationScoped":false,"installedTimestamp":1718914849010,"pinned":false,"source":"gallery","id":"8c1fc960-44b1-45e8-89b5-85f982fdaf27","publisherId":"8d7f2028-26ae-4724-8306-a1c8bb6c6794","publisherDisplayName":"adpyke","targetPlatform":"universal","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"aaron-bond.better-comments","uuid":"7a0110bb-231a-4598-aa1b-0769ea46d28b"},"manifest":{"name":"better-comments","displayName":"Better Comments","icon":"icon.png","description":"Improve your code commenting by annotating with alert, informational, TODOs, and more!","version":"3.0.2","publisher":"aaron-bond","author":{"name":"Aaron Bond"},"homepage":"https://github.com/aaron-bond/better-comments/blob/master/README.md","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/aaron-bond/better-comments"},"sponsor":{"url":"https://github.com/sponsors/aaron-bond"},"bugs":"https://github.com/aaron-bond/better-comments/issues","categories":["Formatters"],"engines":{"vscode":"^1.65.0"},"extensionKind":["ui","workspace"],"activationEvents":["onStartupFinished"],"galleryBanner":{"color":"#e3f4ff","theme":"light"},"browser":"./out/web/extension.js","main":"./out/extension","scripts":{"vscode:prepublish":"npm run compile && npm run package-web","compile":"tsc -p ./","watch":"tsc -watch -p ./","lint":"tslint -c tslint.json 'src/**/*.ts'","compile-web":"webpack --config ./build/web-extension.webpack.config.js","watch-web":"webpack --watch --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --devtool hidden-source-map --config ./build/web-extension.webpack.config.js"},"contributes":{"configuration":{"title":"Better Comments configuration","properties":{"better-comments.multilineComments":{"type":"boolean","description":"Whether the multiline comment highlighter should be active","default":true},"better-comments.highlightPlainText":{"type":"boolean","description":"Whether the plaintext comment highlighter should be active","default":false},"better-comments.tags":{"type":"array","description":"Tags which are used to color the comments. Changes require a restart of VS Code to take effect","default":[{"tag":"!","color":"#FF2D00","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"?","color":"#3498DB","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"//","color":"#474747","strikethrough":true,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"todo","color":"#FF8C00","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"*","color":"#98C379","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false}]}}}},"dependencies":{"json5":"^2.2.1"},"devDependencies":{"@types/json5":"^2.2.0","@types/node":"^17.0.23","@types/vscode":"^1.65.0","path-browserify":"^1.0.1","process":"^0.11.10","ts-loader":"^9.3.1","tslint":"^6.1.3","typescript":"^4.6.3","util":"^0.12.4","vsce":"^2.10.0","webpack":"^5.74.0","webpack-cli":"^4.10.0"}},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/aaron-bond.better-comments-3.0.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"aaron-bond","metadata":{"isApplicationScoped":false,"installedTimestamp":1718914848967,"pinned":false,"source":"gallery","id":"7a0110bb-231a-4598-aa1b-0769ea46d28b","publisherId":"02145bab-b083-4d1e-b8ec-08d7abdd68da","publisherDisplayName":"aaron-bond","targetPlatform":"universal","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"johnpapa.vscode-peacock","uuid":"5a7017bf-c571-4d77-b902-6e56b16f539a"},"manifest":{"name":"vscode-peacock","displayName":"Peacock","description":"Subtly change the workspace color of your workspace. Ideal when you have multiple VS Code instances and you want to quickly identify which is which.","version":"4.2.2","publisher":"johnpapa","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/johnpapa/vscode-peacock.git"},"homepage":"https://github.com/johnpapa/vscode-peacock/blob/main/README.md","icon":"resources/peacock-icon.png","galleryBanner":{"color":"#373436","theme":"dark"},"engines":{"vscode":"^1.49.0"},"categories":["Other"],"keywords":["Theme","Colors","Fun"],"preview":false,"activationEvents":["*"],"extensionKind":["ui","workspace"],"main":"./dist/extension-node.js","browser":"./dist/extension-web.js","contributes":{"commands":[{"command":"peacock.docs","title":"Open the Documentation","category":"Peacock"},{"command":"peacock.resetWorkspaceColors","title":"Reset Workspace Colors","category":"Peacock"},{"command":"peacock.removeAllColors","title":"Remove All Global and Workspace Colors","category":"Peacock"},{"command":"peacock.saveColorToFavorites","title":"Save Current Color to Favorites","category":"Peacock"},{"command":"peacock.enterColor","title":"Enter a Color","category":"Peacock"},{"command":"peacock.changeColorToPeacockGreen","title":"Color to Peacock Green","category":"Peacock"},{"command":"peacock.addRecommendedFavorites","title":"Add the Recommended Favorites","category":"Peacock"},{"command":"peacock.changeColorToRandom","title":"Surprise Me with a Random Color","category":"Peacock"},{"command":"peacock.changeColorToFavorite","title":"Change to a Favorite Color","category":"Peacock"},{"command":"peacock.darken","title":"Darken","category":"Peacock"},{"command":"peacock.lighten","title":"Lighten","category":"Peacock"},{"command":"peacock.showAndCopyCurrentColor","title":"Copy the Current Color to the Clipboard","category":"Peacock"},{"command":"peacock.changeColorOfLiveShareHost","title":"Change Live Share Color (Host)","category":"Peacock"},{"command":"peacock.changeColorOfLiveShareGuest","title":"Change Live Share Color (Guest)","category":"Peacock"}],"keybindings":[{"key":"alt+cmd+-","command":"peacock.darken"},{"key":"alt+cmd+=","command":"peacock.lighten"}],"menus":{"commandPalette":[{"command":"peacock.docs"},{"command":"peacock.changeColorOfLiveShareHost","when":"workspaceFolderCount != 0 && peacock:liveshare == true"},{"command":"peacock.changeColorOfLiveShareGuest","when":"workspaceFolderCount != 0 && peacock:liveshare == true"},{"command":"peacock.resetWorkspaceColors","when":"workspaceFolderCount != 0"},{"command":"peacock.removeAllColors","when":"workspaceFolderCount != 0"},{"command":"peacock.saveColorToFavorites","when":"workspaceFolderCount != 0"},{"command":"peacock.enterColor","when":"workspaceFolderCount != 0"},{"command":"peacock.changeColorToPeacockGreen","when":"workspaceFolderCount != 0"},{"command":"peacock.addRecommendedFavorites","when":"workspaceFolderCount != 0"},{"command":"peacock.changeColorToRandom","when":"workspaceFolderCount != 0"},{"command":"peacock.changeColorToFavorite","when":"workspaceFolderCount != 0"},{"command":"peacock.darken","when":"workspaceFolderCount != 0"},{"command":"peacock.lighten","when":"workspaceFolderCount != 0"},{"command":"peacock.showAndCopyCurrentColor","when":"workspaceFolderCount != 0"}]},"configuration":{"properties":{"peacock.squigglyBeGone":{"type":"boolean","default":false,"description":"Easter egg! Specifies whether Peacock should hide all red error, warning and info underlines from the editor by making their color the same as the background."},"peacock.affectEditorGroupBorder":{"type":"boolean","default":false,"description":"Specifies whether Peacock should affect the editorGroup border."},"peacock.affectPanelBorder":{"type":"boolean","default":false,"description":"Specifies whether Peacock should affect the panel border."},"peacock.affectSideBarBorder":{"type":"boolean","default":false,"description":"Specifies whether Peacock should affect the sideBar border."},"peacock.affectSashHover":{"type":"boolean","default":true,"description":"Specifies whether Peacock should affect the sash border."},"peacock.affectActivityBar":{"type":"boolean","default":true,"description":"Specifies whether Peacock should affect the activity bar."},"peacock.affectDebuggingStatusBar":{"type":"boolean","default":false,"description":"Specifies whether Peacock should affect the status bar while debugging."},"peacock.affectStatusBar":{"type":"boolean","default":true,"description":"Specifies whether Peacock should affect the status bar."},"peacock.affectStatusAndTitleBorders":{"type":"boolean","default":false,"description":"Specifies whether Peacock should affect the status or title borders."},"peacock.affectTabActiveBorder":{"type":"boolean","default":false,"description":"Specifies whether Peacock should affect the active tab's border."},"peacock.affectTitleBar":{"type":"boolean","default":true,"description":"Specifies whether Peacock should affect the title bar."},"peacock.color":{"type":"string","default":"","description":"The Peacock color that will be applied to workspaces. This should only be set at the workspace level."},"peacock.elementAdjustments":{"type":"object","properties":{"titleBar":{"type":"string","enum":["none","lighten","darken"]},"activityBar":{"type":"string","enum":["none","lighten","darken"]},"statusBar":{"type":"string","enum":["none","lighten","darken"]}},"default":{"activityBar":"lighten","statusBar":"none","titleBar":"none"},"description":"Adjusts the colorization of affected elements to provide visual contrast"},"peacock.favoriteColors":{"type":"array","default":[{"name":"Angular Red","value":"#dd0531"},{"name":"Azure Blue","value":"#007fff"},{"name":"JavaScript Yellow","value":"#f9e64f"},{"name":"Mandalorian Blue","value":"#1857a4"},{"name":"Node Green","value":"#215732"},{"name":"React Blue","value":"#61dafb"},{"name":"Something Different","value":"#832561"},{"name":"Svelte Orange","value":"#ff3d00"},{"name":"Vue Green","value":"#42b883"}],"items":{"type":"object"},"description":"Your favorite colors"},"peacock.keepBadgeColor":{"type":"boolean","default":false,"description":"Recommended to remain false. However, when set to true Peacock will not colorize badges in any of the affected elements in response to background alterations"},"peacock.darkenLightenPercentage":{"type":"number","default":5,"minimum":1,"maximum":10,"description":"Specifies the amount to darken or lighten the color, in percentage"},"peacock.darkForegroundColor":{"type":"string","default":"#15202b","description":"Specifies the override value for the dark foreground color"},"peacock.keepForegroundColor":{"type":"boolean","default":false,"description":"Recommended to remain false. However, when set to true Peacock will not colorize the foreground of any of the affected elements and will only alter the background"},"peacock.lightForegroundColor":{"type":"string","default":"#e7e7e7","description":"Specifies the override value for the light foreground color"},"peacock.remoteColor":{"type":"string","default":"","description":"The Peacock color that will be applied to remote workspaces."},"peacock.showColorInStatusBar":{"type":"boolean","default":true,"description":"Show the Peacock color in the status bar"},"peacock.surpriseMeFromFavoritesOnly":{"type":"boolean","default":false,"description":"Specifies whether Peacock should choose a random color from the favorites list or a purely random color."},"peacock.surpriseMeOnStartup":{"type":"boolean","default":false,"description":"Specifies that Peacock should surprise you at the start of every editing session, only when a color isn't already set. "},"peacock.vslsJoinColor":{"type":"string","default":"","description":"Peacock color for Live Share Color when acting as a Guest "},"peacock.vslsShareColor":{"type":"string","default":"","description":"Peacock color for Live Share Color when acting as a Host "}}}},"scripts":{"docs:dev":"vuepress dev docs","docs:build":"vuepress build docs","package":"npx vsce package","publish":"npx vsce publish","vscode:prepublish":"webpack --mode production","lint":"eslint ./src --ext .js,.ts","lint-fix":"eslint ./src --ext .js,.ts --fix","webpack":"webpack --mode none","watch":"webpack --mode none --watch","pretty":"npx prettier@2 src/. --write","just-test":"node ./out/test/runTest.js","just-live-share-test":"node out/live-share/test/runTest.js","test-compile":"tsc -p ./ && npm run webpack","test":"npm run test-compile && npm run just-test","test-all":"npm run test && npm run just-live-share-test","test:coverage":"npm run just-test -- --coverage","open-in-browser":"npx vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."},"devDependencies":{"@types/glob":"^7.1.3","@types/istanbul-lib-instrument":"^1.7.4","@types/istanbul-lib-report":"^1.1.1","@types/istanbul-lib-source-maps":"^1.2.2","@types/istanbul-reports":"^1.1.2","@types/mocha":"^7.0.2","@types/node":"12.12.16","@types/sinon":"^7.5.2","@types/vscode":"^1.49.0","@types/webpack-env":"^1.16.0","@typescript-eslint/eslint-plugin":"^2.34.0","@typescript-eslint/parser":"^2.34.0","@vscode/test-web":"^0.0.15","eslint":"^6.8.0","eslint-config-prettier":"^6.12.0","eslint-plugin-prettier":"^3.1.4","glob":"^7.1.6","husky":"^4.3.0","istanbul-lib-coverage":"^3.0.0","istanbul-lib-instrument":"^3.3.0","istanbul-lib-report":"^2.0.8","istanbul-lib-source-maps":"^3.0.6","istanbul-reports":"^3.0.2","mocha":"^7.2.0","mocha-multi-reporters":"^1.1.7","prettier":"^2.1.2","process":"^0.11.10","sinon":"^9.1.0","ts-loader":"^9.2.2","typescript":"^3.9.7","vscode-test":"^1.4.0","vuepress":"^2.0.0-beta.26","webpack":"^5.38.1","webpack-cli":"^4.7.0"},"dependencies":{"@types/tinycolor2":"^1.4.1","tinycolor2":"^1.4.2","vsls":"^1.0.2594"},"husky":{"hooks":{"pre-commit":"npm run pretty"}}},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/johnpapa.vscode-peacock-4.2.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"johnpapa","metadata":{"isApplicationScoped":false,"installedTimestamp":1718914848978,"pinned":false,"source":"gallery","id":"5a7017bf-c571-4d77-b902-6e56b16f539a","publisherId":"4434843a-4ebf-4f44-84f5-4176380c492d","publisherDisplayName":"johnpapa","targetPlatform":"universal","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"pucelle.vscode-css-navigation","uuid":"f97a6398-d553-44cf-9ebf-54e8dbf8d3fb"},"manifest":{"name":"vscode-css-navigation","displayName":"CSS Navigation","description":"Allows Go to Definition from HTML to CSS / Sass / Less; provides Completion and Workspace Symbols for class & id name.","icon":"images/logo.png","version":"1.13.2","license":"MIT","publisher":"pucelle","homepage":"https://github.com/pucelle/vscode-css-navigation","repository":{"type":"git","url":"https://github.com/pucelle/vscode-css-navigation.git"},"bugs":{"url":"https://github.com/pucelle/vscode-css-navigation/issues"},"engines":{"vscode":"^1.51.1"},"categories":["Programming Languages"],"keywords":["CSS Goto Definition","CSS Peek Definition","CSS Completion","CSS Workspace Symbol","Sass, Less"],"activationEvents":["*"],"main":"./client/out/extension","contributes":{"configuration":{"type":"object","title":"CSS Navigation","properties":{"CSSNavigation.enableGoToDefinition":{"type":"boolean","default":true,"description":"Enable `go to definition` by clicking `F12` in HTML files."},"CSSNavigation.enableWorkspaceSymbols":{"type":"boolean","default":true,"description":"Enable searching class and id name across workspace by clicking `Ctrl + T`."},"CSSNavigation.enableIdAndClassNameCompletion":{"type":"boolean","default":true,"description":"Enable auto complete for id and class name in HTML files."},"CSSNavigation.enableFindAllReferences":{"type":"boolean","default":true,"description":"Enable searching CSS selector references in HTML files."},"CSSNavigation.activeHTMLFileExtensions":{"type":"array","default":["html","ejs","erb","php","hbs","js","ts","jsx","tsx","vue","twig"],"items":{"type":"string"},"description":"The extensions of the HTML files, in where you can `go to definition`."},"CSSNavigation.activeCSSFileExtensions":{"type":"array","default":["css","scss","sass","less"],"items":{"type":"string"},"description":"The extensions of the CSS files, where you can `go to` and `peek`."},"CSSNavigation.excludeGlobPatterns":{"type":"array","default":["**/node_modules/**","**/bower_components/**","**/vendor/**","**/coverage/**"],"items":{"type":"string"},"description":"A glob pattern, defines paths to exclude when searching for CSS definitions."},"CSSNavigation.alwaysIncludeGlobPatterns":{"type":"array","default":[],"items":{"type":"string"},"description":"A glob pattern, files match will always be included even they match `excludeGlobPatterns` or listed in `.gitignore` or `.npmignore`, or out of workspace directory. Stronly suggest you specifies the full start path, or absolute path for the pattern, but not start with `**/`."},"CSSNavigation.alwaysIncludeImportedFiles":{"type":"boolean","default":true,"description":"When `true` by default, will always include files specified by `@import ...`, `<link rel=stylesheet href=...>` or `<style src=...>`(only for Vue syntax), although they should be excluded aspect to `excludeGlobPatterns` option or `.gitignore` file."},"CSSNavigation.alsoSearchDefinitionsInStyleTag":{"type":"boolean","default":true,"description":"When `true` by default, will also search CSS definitions in <style> tag for current document."},"CSSNavigation.searchAcrossWorkspaceFolders":{"type":"boolean","default":false,"description":"When `false` by default, only search CSS definition in current workspace folder. If your workspace folder requires css references from another workspace folder in current worksapce, you should set this to `true`."},"CSSNavigation.ignoreSameNameCSSFile":{"type":"boolean","default":true,"description":"When `true` by default, e.g.: If `the-name.scss and `the-name.css` exist in a same folder, the `the-name.css` will be skipped. If you prefer compiling Scss or Less file to the same name CSS file, this would be very helpful."},"CSSNavigation.ignoreCustomElement":{"type":"boolean","default":true,"description":"When `true` by default, custom element definitions in CSS will be ignored, such that it will go to it's defined place directly."},"CSSNavigation.ignoreFilesBy":{"type":"array","items":{"type":"string","enum":[".gitignore",".npmignore"]},"default":[".gitignore"],"description":"Specifies it to ignore files and directories list in `.gitignore` or `.npmignore` when looking for css definitions."},"CSSNavigation.enableLogLevelMessage":{"type":"boolean","default":false,"description":"Whether enables log level message, set it to `true` for debugging."}}}},"scripts":{"vscode:prepublish":"npm run build","build":"tsc -b","watch":"tsc -b -w","postinstall":"cd client && npm install && cd ../server && npm install && cd ..","test":"sh ./client/test/scripts/e2e.sh"},"devDependencies":{"@types/fs-extra":"^9.0.1","@types/glob":"^7.1.3","@types/minimatch":"^3.0.3","@types/mocha":"^5.2.5","@types/node":"^14.14.10","typescript":"^4.3.5"},"dependencies":{"fs-extra":"^9.0.1","glob":"^7.1.6","minimatch":"^3.0.4"}},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/pucelle.vscode-css-navigation-1.13.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"pucelle","metadata":{"isApplicationScoped":false,"installedTimestamp":1718914848956,"pinned":false,"source":"gallery","id":"f97a6398-d553-44cf-9ebf-54e8dbf8d3fb","publisherId":"7650fded-a9d9-4383-a346-4136ebe47608","publisherDisplayName":"pucelle","targetPlatform":"universal","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"johnpapa.winteriscoming","uuid":"fd6d3dc6-b307-4589-82a6-78e2afec3d77"},"manifest":{"name":"winteriscoming","displayName":"Winter is Coming Theme","description":"Preferred dark/light themes by John Papa","icon":"images/winteriscoming-icon.png","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/johnpapa/vscode-winteriscoming.git"},"galleryBanner":{"color":"#373436","theme":"dark"},"version":"1.4.4","publisher":"johnpapa","keywords":["Theme","Dark Theme","Light Theme"],"scripts":{"list":"npx vsce ls","package":"npx vsce package","publish":"npx vsce publish"},"engines":{"vscode":"^1.17.0"},"categories":["Themes","Other"],"contributes":{"themes":[{"label":"Winter is Coming (Dark Blue)","uiTheme":"vs-dark","path":"./themes/WinterIsComing-dark-blue-color-theme.json"},{"label":"Winter is Coming (Dark Blue - No Italics)","uiTheme":"vs-dark","path":"./themes/WinterIsComing-dark-blue-color-no-italics-theme.json"},{"label":"Winter is Coming (Light)","uiTheme":"vs","path":"./themes/WinterIsComing-light-color-theme.json"},{"label":"Winter is Coming (Light - No Italics)","uiTheme":"vs","path":"./themes/WinterIsComing-light-color-no-italics-theme.json"},{"label":"Winter is Coming (Dark Black)","uiTheme":"vs-dark","path":"./themes/WinterIsComing-dark-color-theme.json"},{"label":"Winter is Coming (Dark Black - No Italics)","uiTheme":"vs-dark","path":"./themes/WinterIsComing-dark-color-no-italics-theme.json"}]}},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/johnpapa.winteriscoming-1.4.4-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"johnpapa","metadata":{"isApplicationScoped":false,"installedTimestamp":1718914848989,"pinned":false,"source":"gallery","id":"fd6d3dc6-b307-4589-82a6-78e2afec3d77","publisherId":"4434843a-4ebf-4f44-84f5-4176380c492d","publisherDisplayName":"johnpapa","targetPlatform":"universal","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"christian-kohler.path-intellisense","uuid":"a41c1549-4053-44d4-bf30-60fc809b4a86"},"manifest":{"name":"path-intellisense","private":true,"displayName":"Path Intellisense","description":"Visual Studio Code plugin that autocompletes filenames","version":"2.8.0","publisher":"christian-kohler","engines":{"vscode":"^1.43.0"},"homepage":"https://github.com/ChristianKohler/PathIntellisense","repository":{"type":"git","url":"https://github.com/ChristianKohler/PathIntellisense.git"},"categories":["Other"],"activationEvents":["*"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":{"supported":true}},"contributes":{"configuration":{"type":"object","title":"path-intellisense","properties":{"path-intellisense.extensionOnImport":{"type":"boolean","default":false,"description":"Adds the file extension to a import statements"},"path-intellisense.mappings":{"type":"object","default":{},"description":"Mappings for paths.  The values should be interpreted as absolute paths (and can use '${workspaceFolder}')"},"path-intellisense.showHiddenFiles":{"type":"boolean","default":false,"description":"Show hidden files"},"path-intellisense.autoSlashAfterDirectory":{"type":"boolean","default":false,"description":"Automatically adds slash after directory"},"path-intellisense.absolutePathToWorkspace":{"type":"boolean","default":true,"description":"Sets an absolute path to the current workspace"},"path-intellisense.absolutePathTo":{"type":"string","description":"If defined, unmapped absolute path imports are based on this location.  Takes priority over 'absolutePathToWorkspace' if both are defined"},"path-intellisense.showOnAbsoluteSlash":{"type":"boolean","default":true,"description":"Shows suggestions when the import starts with a forward slash ('/')"},"path-intellisense.ignoreTsConfigBaseUrl":{"type":"boolean","default":false,"description":"Ignores tsconfig file for mappings"},"path-intellisense.autoTriggerNextSuggestion":{"type":"boolean","default":false,"description":"Automatically triggers next suggestion after previous suggestion"}}}},"main":"./out/extension.js","browser":"./dist/web/extension.js","icon":"icon/path-intellisense.png","scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","lint":"eslint src --ext ts","watch":"tsc -watch -p ./","pretest":"npm run compile && npm run lint","test":"node ./out/test/runTest.js","test-headless":"xvfb-run -a npm test","package":"vsce package","deploy":"vsce publish","prepack":"npm run package && npm run package-web","compile-web":"webpack --config ./build/web-extension.webpack.config.js","watch-web":"webpack --watch --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --devtool hidden-source-map --config ./build/web-extension.webpack.config.js"},"devDependencies":{"@semantic-release/changelog":"^5.0.1","@semantic-release/git":"^9.0.0","@semantic-release/npm":"^7.0.5","@types/benchmark":"^1.0.31","@types/glob":"^7.1.1","@types/mocha":"^7.0.1","@types/node":"^12.11.7","@types/vscode":"^1.43.0","@typescript-eslint/eslint-plugin":"^2.18.0","@typescript-eslint/parser":"^2.18.0","eslint":"^6.8.0","glob":"^7.1.6","mocha":"^7.0.1","path-browserify":"^1.0.1","process":"^0.11.10","ts-loader":"^9.2.5","typescript":"^3.9.10","vsce":"^1.76.0","vscode-test":"^1.3.0","webpack":"^5.51.1","webpack-cli":"^4.8.0"},"dependencies":{"@types/json5":"0.0.30","benchmark":"^2.1.4","json5":"^2.1.2","lodash":"^4.17.19","minimatch":"^3.0.4"}},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/christian-kohler.path-intellisense-2.8.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"christian-kohler","metadata":{"isApplicationScoped":false,"installedTimestamp":1718914848999,"pinned":false,"source":"gallery","id":"a41c1549-4053-44d4-bf30-60fc809b4a86","publisherId":"a892fb38-060b-475f-9e73-2e06a8a17a68","publisherDisplayName":"christian-kohler","targetPlatform":"universal","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.debugpy","uuid":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615"},"manifest":{"name":"debugpy","displayName":"Python Debugger","description":"Python Debugger extension using debugpy.","version":"2024.6.0","publisher":"ms-python","enabledApiProposals":["portsAttributes","contribIssueReporter","debugVisualization"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python-debugger","repository":{"type":"git","url":"https://github.com/microsoft/vscode-python-debugger.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-python-debugger/issues"},"icon":"icon.png","keywords":["python","debugger","debugpy"],"engines":{"vscode":"^1.87.0"},"categories":["Debuggers"],"activationEvents":["onDebugInitialConfigurations","onDebugDynamicConfigurations:debugpy","onDebugResolve:debugpy","onLanguage:python"],"main":"./dist/extension.js","l10n":"./l10n","contributes":{"commands":[{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json"},{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue..."}],"menus":{"issue/reporter":[{"command":"debugpy.reportIssue"}],"commandPalette":[{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.viewOutput","title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"debugpy.debugInTerminal","title":"Python Debugger: Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"debugpy.debugUsingLaunchConfig","title":"Python Debugger: Debug using launch.json","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}]},"configuration":{"properties":{"debugpy.debugJustMyCode":{"default":true,"description":"When debugging only step through user-written code. Disable this to allow stepping into library code.","scope":"resource","type":"boolean"}},"title":"Python Debugger","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":["number","string"]}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":["number","string"]}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program. For string type arguments, it will pass through the shell as is, and therefore all shell variable expansions will apply. But for the array type, the values will be shell-escaped.","items":{"type":"string"},"anyOf":[{"default":"${command:pickArgs}","enum":["${command:pickArgs}"]},{"type":["array","string"]}]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the Python debug adapter executable.","type":"string"},"autoStartBrowser":{"default":false,"description":"Open external browser to launch the application","type":"boolean"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications.","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging.","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"},"guiEventLoop":{"default":"matplotlib","description":"The GUI event loop that's going to run. Possible values: \"matplotlib\", \"wx\", \"qt\", \"none\", or a custom function that'll be imported and run.","type":"string"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"}}}},"configurationSnippets":[],"label":"Python Debugger","languages":["python"],"type":"debugpy","variables":{"pickProcess":"debugpy.pickLocalProcess","pickArgs":"debugpy.pickArgs"},"when":"!virtualWorkspace && shellExecutionSupported"}],"debugVisualizers":[{"id":"inlineHexDecoder","when":"debugConfigurationType == 'debugpy' && (variableType == 'float' || variableType == 'int')"}]},"extensionDependencies":["ms-python.python"],"scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","test":"node ./out/test/runTest.js","vsce-package":"npx @vscode/vsce package -o python-debugger.vsix"},"devDependencies":{"@types/chai":"^4.3.4","@types/chai-as-promised":"^7.1.8","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.191","@types/mocha":"^10.0.1","@types/node":"18.x","@types/semver":"^7.3.13","@types/sinon":"^10.0.13","@types/vscode":"^1.87.0","@typescript-eslint/eslint-plugin":"^5.31.0","@typescript-eslint/parser":"^5.62.0","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^2.24.0","chai":"^4.3.7","chai-as-promised":"^7.1.1","eslint":"^8.50.0","glob":"^8.0.3","mocha":"^10.0.0","prettier":"^3.0.3","rewiremock":"^3.13.0","semver":"^7.5.4","sinon":"^15.0.2","ts-loader":"^9.3.1","ts-mockito":"^2.6.1","typemoq":"^2.1.0","typescript":"^5.2.2","vscode-test":"^1.6.1","webpack":"^5.87.0","webpack-cli":"^5.1.4"},"dependencies":{"@vscode/extension-telemetry":"^0.8.5","@vscode/python-extension":"^1.0.5","fs-extra":"^11.2.0","iconv-lite":"^0.6.3","inversify":"^6.0.1","jsonc-parser":"^3.2.0","lodash":"^4.17.21","reflect-metadata":"^0.1.13","vscode-debugadapter":"^1.51.0","vscode-debugprotocol":"^1.51.0","vscode-languageclient":"^8.0.2"}},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/ms-python.debugpy-2024.6.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"ms-python","metadata":{"installedTimestamp":1718914915312,"source":"gallery","id":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.","version":"2024.4.1","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense with Pylance is supported. Cannot execute Python with untrusted files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["contribEditorContentMenu","quickPickSortByLabel","testObserver","quickPickItemTooltip","terminalDataWriteEvent","terminalExecuteCommandEvent","contribIssueReporter"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.86.0"},"enableTelemetry":false,"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Other","Data Science","Machine Learning"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugResolve:python","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:manage.py","workspaceContains:app.py"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","l10n":"./l10n","contributes":{"walkthroughs":[{"id":"pythonWelcome","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":""},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.selectInterpreter","title":"Select a Python Interpreter","description":"Choose which Python interpreter/environment you want to use for your Python project.\n[Select Python Interpreter](command:python.setInterpreter)\n**Tip**: Run the ``Python: Select Interpreter`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/python-interpreter.svg","altText":"Selecting a Python interpreter from the status bar"},"when":"workspaceFolderCount == 0"},{"id":"python.createEnvironment","title":"Create a Python Environment","description":"Create an environment for your Python project.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).\n 🔍 Check out our [docs](https://aka.ms/pythonenvs) to learn more.","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"},"when":"workspaceFolderCount > 0"},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."},"when":""},{"id":"python.learnMoreWithDS","title":"Explore more resources","description":"🎨 Find all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Learn More](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"},"when":""}]},{"id":"pythonWelcome2","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"false","steps":[{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":""},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.createEnvironment2","title":"Select a Python environment","description":"[Select a Python interpreter](command:python.setInterpreter) or [create an environment](command:python.createEnvironment) for your Python project.\n[Select Interpreter](command:python.setInterpreter)","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"},"when":""},{"id":"python.runAndDebug2","title":"Run and debug","description":"Click the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger.","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."},"when":""},{"id":"python.learnMoreWithDS2","title":"Keep exploring!","description":"🎨 Explore all the features the Python extension has to offer by searching for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Follow along with the Python Quick Start](https://code.visualstudio.com/docs/python/python-quick-start)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"},"when":""}]},{"id":"pythonDataScienceWelcome","title":"Get Started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening Python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment..."},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment..."},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.startREPL","title":"Start REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python","command":"python.installJupyter","title":"Install the Jupyter extension"}],"configuration":{"properties":{"python.activeStateToolPath":{"default":"state","description":"Path to the State Tool executable for ActiveState runtimes (version 0.36+).","scope":"machine-overridable","type":"string"},"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array","uniqueItems":true},"python.createEnvironment.contentButton":{"default":"hide","markdownDescription":"Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.","scope":"machine-overridable","type":"string","enum":["show","hide"]},"python.createEnvironment.trigger":{"default":"prompt","markdownDescription":"Detect if environment creation is required for the current project","scope":"machine-overridable","type":"string","enum":["off","prompt"]},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","markdownDescription":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used","scope":"machine-overridable","type":"string"},"python.diagnostics.sourceMapsEnabled":{"default":false,"description":"Enable source map support for meaningful stack traces in error logs.","scope":"application","type":"boolean"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"machine","type":"boolean"},"python.experiments.optInto":{"default":[],"markdownDescription":"List of experiment to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend","pythonRecommendTensorboardExt"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment.","Denotes the Tensorboard Extension recommendation experiment."]},"scope":"machine","type":"array","uniqueItems":true},"python.experiments.optOutFrom":{"default":[],"markdownDescription":"List of experiment to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"machine","type":"array","uniqueItems":true},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.logging.level":{"default":"error","deprecationMessage":"This setting is deprecated. Please use command `Developer: Set Log Level...` to set logging level.","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.missingPackage.severity":{"default":"Hint","description":"Set severity of missing packages in requirements.txt or pyproject.toml","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string","tags":["experimental"]},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.tensorBoard.logDirectory":{"default":"","description":"Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.","scope":"resource","type":"string","markdownDeprecationMessage":"Tensorboard support has been moved to the extension [Tensorboard extension](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.tensorboard). Instead use the setting `tensorBoard.logDirectory`.","deprecationMessage":"Tensorboard support has been moved to the extension Tensorboard extension. Instead use the setting `tensorBoard.logDirectory`."},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in all Terminals created.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.REPL.enableREPLSmartSend":{"default":true,"description":"Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array","uniqueItems":true},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"consoleTitle":{"default":"Python Debug Console","description":"Display name of the debug console or terminal"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"deprecated":"This configuration will be deprecated soon. Please replace `python` with `debugpy` to use the new Python Debugger extension.","configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported","hiddenWhen":"true"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused"},{"command":"python.refreshTensorBoard","key":"ctrl+r","mac":"cmd+r","when":"python.hasActiveTensorBoardSession"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*requirements*.{txt, in}","**/*constraints*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"issue/reporter":[{"command":"python.reportIssue"}],"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment...","when":"false"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal","when":"false"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/content":[{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceLangId == pip-requirements && !virtualWorkspace && shellExecutionSupported && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"},{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceFilename == pyproject.toml && pipInstallableToml && !virtualWorkspace && shellExecutionSupported  && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"}],"editor/context":[{"submenu":"python.run","group":"Python","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && isWorkspaceTrusted"},{"submenu":"python.runFileInteractive","group":"Jupyter2","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && !isJupyterInstalled && isWorkspaceTrusted"}],"python.runFileInteractive":[{"command":"python.installJupyter","group":"Jupyter2","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"python.run":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"}],"editor/title":[{"command":"python.refreshTensorBoard","group":"navigation@0","when":"python.hasActiveTensorBoardSession && !virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInDedicatedTerminal","group":"navigation@0","title":"Run Python File in Dedicated Terminal","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"submenus":[{"id":"python.run","label":"Run Python","icon":"$(play)"},{"id":"python.runFileInteractive","label":"Run in Interactive window"}],"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compileApi":"node ./node_modules/typescript/lib/tsc.js -b ./pythonExtensionApi/tsconfig.json","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint --ext .ts,.js src build pythonExtensionApi","lint-fix":"eslint --fix --ext .ts,.js src build pythonExtensionApi gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.8.4","@vscode/jupyter-lsp-middleware":"^0.2.50","arch":"^2.1.0","fs-extra":"^10.0.1","glob":"^7.2.0","hash.js":"^1.1.7","iconv-lite":"^0.6.3","inversify":"^5.0.4","jsonc-parser":"^3.0.0","lodash":"^4.17.21","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.1.12","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^7.5.2","stack-trace":"0.0.10","sudo-prompt":"^9.2.1","tmp":"^0.0.33","uint64be":"^3.0.0","unicode":"^14.0.0","untildify":"^4.0.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"^9.0.0-next.2","vscode-languageclient":"^10.0.0-next.2","vscode-languageserver-protocol":"^3.17.6-next.3","vscode-tas-client":"^0.1.84","which":"^2.0.2","winreg":"^1.2.4","xml2js":"^0.5.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/bent":"^7.3.0","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/download":"^8.0.1","@types/fs-extra":"^9.0.13","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^18.17.1","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^10.0.11","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/vscode":"^1.81.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^3.7.0","@typescript-eslint/parser":"^3.7.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.18.0","bent":"^7.3.12","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","eslint":"^7.2.0","eslint-config-airbnb":"^18.2.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.25.4","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^4.0.0","gulp-typescript":"^5.0.0","mocha":"^9.2.2","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","shortid":"^2.2.8","sinon":"^13.0.1","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"4.5.5","uuid":"^8.3.2","webpack":"^5.76.0","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","worker-loader":"^3.0.8","yargs":"^15.3.1"},"extensionPack":["ms-python.vscode-pylance","ms-python.debugpy"]},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/ms-python.python-2024.4.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"ms-python","metadata":{"installedTimestamp":1718914915304,"source":"gallery","id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"esbenp.prettier-vscode","uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90"},"manifest":{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"Code formatter using prettier","version":"10.4.0","publisher":"esbenp","author":"Prettier <@prettiercode>","galleryBanner":{"color":"#ffe04b","theme":"light"},"sponsor":{"url":"https://opencollective.com/prettier"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.60.0"},"keywords":["multi-root ready","prettier","formatter","javascript","handlebars","js","jsx","flow","typescript","ts","json","css","less","scss","styled-components","styled-jsx","markdown","md","commonmark","mdx","php","pug","ruby","swift","html","vue","ember","glimmer","angular","graphql","yaml","yml"],"categories":["Formatters"],"activationEvents":["onStartupFinished"],"icon":"icon.png","main":"./dist/extension","browser":"./dist/web-extension","scripts":{"clean":"node ./scripts/clean.js","lint":"eslint -c .eslintrc.js --ext .ts .","pretest":"yarn test-compile && cd test-fixtures/plugins && yarn install && cd ../plugins-pnpm && pnpm i && cd ../outdated && yarn install && cd ../module && yarn install && cd ../specific-version && yarn install && cd ../explicit-dep && yarn install && cd implicit-dep && yarn install && cd ../../v3 && yarn install && cd ../plugin-tailwindcss && npm i && cd ../v3-plugins && npm i && cd ../v3-plugin-override && yarn install","prettier":"prettier --write '**/*.{ts,json,md,hbs,yml,js}'","test-compile":"yarn clean && tsc -p ./ && yarn webpack && cp -r ./src/worker ./out","test":"node ./out/test/runTests.js","version":"node ./scripts/version.js && git add CHANGELOG.md","vscode:prepublish":"webpack --mode production","watch":"tsc --watch -p ./","webpack-dev":"webpack --mode development --watch","webpack":"webpack --mode development","postinstall":"husky install","chrome":"yarn webpack && vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."},"lint-staged":{"**/*.{ts,json,md,yml,hbs,js}":["prettier --write"],"src/**/*.ts":["eslint -c .eslintrc.js --ext .ts ."]},"devDependencies":{"@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/mocha":"^10.0.6","@types/node":"20.11.30","@types/prettier":"^2.7.2","@types/resolve":"^1.20.3","@types/semver":"^7.5.8","@types/sinon":"^17.0.3","@types/tmp":"^0.2.6","@types/vscode":"^1.60.0","@typescript-eslint/eslint-plugin":"^5.45.0","@typescript-eslint/parser":"^5.45.0","@vscode/test-electron":"^2.3.9","@vscode/test-web":"^0.0.52","copy-webpack-plugin":"^12.0.2","eslint":"^8.31.0","eslint-config-prettier":"^9.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","husky":"^9.0.11","lint-staged":"^15.2.2","mocha":"^10.3.0","path-browserify":"^1.0.1","process":"^0.11.10","sinon":"^17.0.1","tmp":"^0.2.3","ts-loader":"^9.5.1","typescript":"^4.6.3","util":"^0.12.4","vsce":"^2.15.0","vscode-nls-dev":"^4.0.4","webpack":"^5.91.0","webpack-cli":"^5.0.1"},"dependencies":{"find-up":"5.0.0","prettier":"^2.8.8","resolve":"^1.22.8","semver":"^7.6.0","vscode-nls":"^5.2.0"},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"Only the built-in version of Prettier will be used when running in untrusted mode.","restrictedConfigurations":["prettier.documentSelectors","prettier.resolveGlobalModules","prettier.ignorePath","prettier.prettierPath","prettier.configPath","prettier.useEditorConfig","prettier.resolveGlobalModules","prettier.withNodeModules"]}},"contributes":{"configuration":{"type":"object","title":"Prettier","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"deprecationMessage":"This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.","markdownDescription":"A list of languages IDs to disable this extension on.","scope":"window"},"prettier.documentSelectors":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter.","scope":"window"},"prettier.enable":{"type":"boolean","default":true,"markdownDescription":"Controls whether Prettier is enabled or not. Reload required.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"markdownDescription":"Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._","scope":"resource"},"prettier.resolveGlobalModules":{"type":"boolean","default":false,"markdownDescription":"When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._","scope":"resource"},"prettier.withNodeModules":{"type":"boolean","default":false,"markdownDescription":"This extension will process files in `node_modules`.","scope":"resource"},"prettier.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","deprecationMessage":"Package manager is now automatically detected by VS Code. This setting is no longer used.","markdownDescription":"The package manager you use to install node modules."},"prettier.useEditorConfig":{"type":"boolean","default":true,"markdownDescription":"Whether or not to take `.editorconfig` into account when parsing configuration. See the [`prettier.resolveConfig`](https://prettier.io/docs/en/api.html) docs for details.","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","markdownDescription":"Path to a `.prettierignore` file.","scope":"resource"},"prettier.prettierPath":{"type":"string","markdownDescription":"Path to the `prettier` module, eg: `./node_modules/prettier`.","scope":"resource"},"prettier.configPath":{"type":"string","markdownDescription":"Path to the prettier configuration file.","scope":"resource"},"prettier.enableDebugLogs":{"type":"boolean","default":false,"markdownDescription":"Enable debug logs for troubleshooting.","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"markdownDescription":"Fit code within this line limit.","scope":"language-overridable"},"prettier.tabWidth":{"type":"integer","default":2,"markdownDescription":"Number of spaces it should use per tab.","scope":"language-overridable"},"prettier.singleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single instead of double quotes.","scope":"language-overridable"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"es5","markdownDescription":"Controls the printing of trailing commas wherever possible. \nValid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)","scope":"language-overridable"},"prettier.bracketSpacing":{"type":"boolean","default":true,"markdownDescription":"Controls the printing of spaces inside object literals.","scope":"language-overridable"},"prettier.singleAttributePerLine":{"type":"boolean","default":false,"markdownDescription":"Enforces single attribute per line in HTML, JSX, Vue and Angular.","scope":"language-overridable"},"prettier.bracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","scope":"language-overridable"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","deprecationMessage":"This option has been deprecated in v2.4.0, use `bracketSameLine` instead.","scope":"language-overridable"},"prettier.semi":{"type":"boolean","default":true,"markdownDescription":"Whether to add a semicolon at the end of every line.","scope":"language-overridable"},"prettier.requirePragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.","scope":"language-overridable"},"prettier.insertPragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can insert a special `@format` marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the `@format` marker.","scope":"language-overridable"},"prettier.useTabs":{"type":"boolean","default":false,"markdownDescription":"Indent lines with tabs.","scope":"language-overridable"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","markdownDescription":"(Markdown) wrap prose over multiple lines.","scope":"language-overridable"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"always","markdownDescription":"Include parentheses around a sole arrow function parameter.","scope":"language-overridable"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single quotes instead of double quotes in JSX.","scope":"language-overridable"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","markdownDescription":"Specify the global [whitespace sensitivity](https://prettier.io/blog/2018/11/07/1.15.0.html#whitespace-sensitive-formatting) for HTML files.\nValid options:\n- `css` - Respect the default value of CSS `display` property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignore` - Whitespaces are considered insensitive.","scope":"language-overridable"},"prettier.vueIndentScriptAndStyle":{"type":"boolean","default":false,"markdownDescription":"Whether or not to indent the code inside `<script>` and `<style>` tags in Vue SFC files.","scope":"language-overridable"},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"lf","markdownDescription":"Specify the end of line used by prettier.","scope":"language-overridable"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","markdownDescription":"Change when properties in objects are quoted.\nValid options:\n- `\"as-needed\"` - Only add quotes around object properties where required.\n- `\"consistent\"` - If at least one property in an object requires quotes, quote all properties.\n- `\"preserve\"` - Respect the input use of quotes in object properties.","scope":"language-overridable"},"prettier.embeddedLanguageFormatting":{"type":"string","enum":["auto","off"],"default":"auto","markdownDescription":"Control whether Prettier formats quoted code embedded in the file.","scope":"language-overridable"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]},{"id":"graphql","extensions":[".graphql"]},{"id":"vue","extensions":[".vue"]},{"id":"handlebars","extensions":[".hbs",".handlebars"]}],"commands":[{"command":"prettier.createConfigFile","title":"Prettier: Create Configuration File"},{"command":"prettier.forceFormatDocument","title":"Format Document (Forced)","when":"editorFocus"}]}},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/esbenp.prettier-vscode-10.4.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"esbenp","metadata":{"installedTimestamp":1719150660430,"pinned":false,"source":"gallery","id":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","publisherId":"d16f4e39-2ffb-44e3-9c0d-79d873570e3a","publisherDisplayName":"esbenp","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vsls-contrib.codetour","uuid":"1d9b1776-4188-4b43-b23f-bab3d47537e9"},"manifest":{"name":"codetour","displayName":"CodeTour","description":"VS Code extension that allows you to record and playback guided tours of codebases, directly within the editor","publisher":"vsls-contrib","version":"0.0.59","author":{"name":"Microsoft Corporation"},"repository":{"type":"git","url":"https://github.com/microsoft/codetour"},"bugs":{"url":"https://github.com/microsoft/codetour/issues"},"homepage":"https://github.com/microsoft/codetour#readme","license":"MIT","icon":"images/icon.png","engines":{"vscode":"^1.60.0"},"categories":["Other"],"keywords":["Collaboration","Sharing"],"extensionKind":["workspace"],"activationEvents":["onStartupFinished","onView:codetour.tours","onNotebookEditor:codetour"],"main":"./dist/extension-node.js","browser":"./dist/extension-web.js","contributes":{"configuration":{"type":"object","title":"CodeTour","properties":{"codetour.promptForWorkspaceTours":{"type":"boolean","default":true,"description":"Specifies whether or not to display a notification when opening a workspace with tours for the first time."},"codetour.recordMode":{"type":"string","enum":["lineNumber","pattern"],"default":"lineNumber","description":"Specifies how the tour recorder will behave when capturing a new step."},"codetour.showMarkers":{"type":"boolean","default":true,"description":"Specifies whether or not to show tour markers in the editor gutter."},"codetour.customTourDirectory":{"type":"string","default":null,"description":"Specifies a custom location to use when discovering tours."}}},"commands":[{"command":"codetour.addContentStep","title":"Add Tour Step","category":"CodeTour"},{"command":"codetour.addDirectoryStep","title":"Add CodeTour Step"},{"command":"codetour.addSelectionStep","title":"Add CodeTour Step"},{"command":"codetour.addTourStep","title":"Add Step to Tour","enablement":"!commentIsEmpty"},{"command":"codetour.changeTourDescription","title":"Change Description"},{"command":"codetour.changeTourRef","title":"Change Git Ref"},{"command":"codetour.changeTourStepLine","title":"Change Line"},{"command":"codetour.changeTourStepTitle","title":"Change Title"},{"command":"codetour.changeTourTitle","title":"Change Title"},{"command":"codetour.resetProgress","title":"Reset Progress","category":"CodeTour"},{"command":"codetour.resetTourProgress","title":"Reset Progress"},{"command":"codetour.deleteTourStep","title":"Delete Step"},{"command":"codetour.deleteTour","title":"Delete Tour"},{"command":"codetour.editTourAtStep","title":"Edit Step"},{"command":"codetour.editTour","title":"Edit Tour","category":"CodeTour","icon":"$(edit)"},{"command":"codetour.endTour","title":"End Tour","category":"CodeTour","icon":"$(primitive-square)"},{"command":"codetour.exportTour","title":"Export Tour..."},{"command":"codetour.hideMarkers","title":"Hide Tour Markers","category":"CodeTour","icon":"$(eye-closed)"},{"command":"codetour.makeTourPrimary","title":"Make Primary"},{"command":"codetour.moveTourStepForward","title":"Move Down","icon":"$(arrow-down)"},{"command":"codetour.moveTourStepBack","title":"Move Up","icon":"$(arrow-up)"},{"command":"codetour.nextTourStep","title":"Next","icon":"$(arrow-right)"},{"command":"codetour.openTourFile","title":"Open Tour File...","icon":"$(folder-opened)","category":"CodeTour"},{"command":"codetour.openTourUrl","title":"Open Tour URL...","category":"CodeTour"},{"command":"codetour.previewTour","title":"Preview Tour","icon":"$(preview)"},{"command":"codetour.previousTourStep","title":"Previous","icon":"$(arrow-left)"},{"command":"codetour.recordTour","title":"Record Tour","category":"CodeTour","icon":"$(add)"},{"command":"codetour.resumeTour","title":"Resume Tour","category":"CodeTour"},{"command":"codetour.saveTourStep","title":"Save Step","enablement":"!commentIsEmpty"},{"command":"codetour.showMarkers","title":"Show Tour Markers","category":"CodeTour","icon":"$(eye)"},{"command":"codetour.startTour","title":"Start Tour","category":"CodeTour","icon":"$(play)"},{"command":"codetour.unmakeTourPrimary","title":"Unmake Primary"},{"command":"codetour.viewNotebook","title":"View Notebook","category":"CodeTour"}],"menus":{"commandPalette":[{"command":"codetour.addContentStep","when":"codetour:inTour && codetour:recording && codetour:canEditTour"},{"command":"codetour.endTour","when":"codetour:inTour"},{"command":"codetour.recordTour","when":"workspaceFolderCount != 0"},{"command":"codetour.resetProgress","when":"codetour:hasProgress"},{"command":"codetour.resumeTour","when":"codetour:inTour"},{"command":"codetour.startTour","when":"codetour:hasTours"},{"command":"codetour.addDirectoryStep","when":"false"},{"command":"codetour.addSelectionStep","when":"false"},{"command":"codetour.addTourStep","when":"false"},{"command":"codetour.changeTourRef","when":"false"},{"command":"codetour.changeTourStepLine","when":"false"},{"command":"codetour.changeTourStepTitle","when":"false"},{"command":"codetour.changeTourTitle","when":"false"},{"command":"codetour.changeTourDescription","when":"false"},{"command":"codetour.deleteTour","when":"false"},{"command":"codetour.deleteTourStep","when":"false"},{"command":"codetour.editTour","when":"false"},{"command":"codetour.editTourAtStep","when":"false"},{"command":"codetour.exportTour","when":"false"},{"command":"codetour.hideMarkers","when":"false"},{"command":"codetour.makeTourPrimary","when":"false"},{"command":"codetour.nextTourStep","when":"false"},{"command":"codetour.previewTour","when":"false"},{"command":"codetour.previousTourStep","when":"false"},{"command":"codetour.resetTourProgress","when":"false"},{"command":"codetour.saveTourStep","when":"false"},{"command":"codetour.showMarkers","when":"false"},{"command":"codetour.unmakeTourPrimary","when":"false"},{"command":"codetour.viewNotebook","when":"false"}],"comments/commentThread/title":[{"command":"codetour.previousTourStep","group":"inline@1","when":"commentController == codetour && commentThread =~ /hasPrevious/"},{"command":"codetour.nextTourStep","group":"inline@2","when":"commentController == codetour && commentThread =~ /hasNext/"},{"command":"codetour.endTour","group":"inline@3","when":"commentController == codetour"},{"command":"codetour.editTour","group":"inline@4","when":"commentController == codetour && !codetour:isEditing && codetour:canEditTour"},{"command":"codetour.previewTour","group":"inline@4","when":"commentController == codetour && codetour:isEditing && !commentThreadIsEmpty"}],"comments/commentThread/context":[{"command":"codetour.addTourStep","group":"inline","when":"commentController == codetour && commentThreadIsEmpty"}],"comments/comment/title":[{"command":"codetour.moveTourStepBack","group":"move@1","when":"commentController == codetour && codetour:canEditTour && commentThread =~ /hasPrevious/"},{"command":"codetour.moveTourStepForward","group":"move@2","when":"commentController == codetour && codetour:canEditTour && commentThread =~ /hasNext/"},{"command":"codetour.changeTourStepLine","group":"mutate@1","when":"commentController == codetour && codetour:canEditTour"},{"command":"codetour.deleteTourStep","group":"mutate@2","when":"commentController == codetour && codetour:canEditTour"}],"comments/comment/context":[{"command":"codetour.saveTourStep","group":"inline@2","when":"commentController == codetour && codetour:recording"}],"view/title":[{"command":"codetour.hideMarkers","when":"view == codetour.tours && codetour:showingMarkers","group":"navigation@1"},{"command":"codetour.showMarkers","when":"view == codetour.tours && !codetour:showingMarkers","group":"navigation@1"},{"command":"codetour.openTourFile","when":"view == codetour.tours","group":"navigation@2"},{"command":"codetour.recordTour","when":"view == codetour.tours","group":"navigation@3"}],"view/item/context":[{"command":"codetour.endTour","when":"viewItem =~ /^codetour.tour(.recording)?.active/","group":"inline@1"},{"command":"codetour.startTour","when":"viewItem =~ /^codetour.tour(.primary)?$/","group":"inline@1"},{"command":"codetour.resumeTour","when":"viewItem =~ /^codetour.tour(.primary)?(.recording)?.active$/","group":"active@1"},{"command":"codetour.endTour","when":"viewItem =~ /^codetour.tour(.primary)?(.recording)?.active$/","group":"active@2"},{"command":"codetour.startTour","when":"viewItem =~ /^codetour.tour(.primary)?$/","group":"basic@1"},{"command":"codetour.viewNotebook","when":"false","group":"basic@2"},{"command":"codetour.addContentStep","when":"viewItem =~ /^codetour.tour(.primary)?.recording/","group":"basic@1"},{"command":"codetour.resetTourProgress","when":"false","group":"basic@2"},{"command":"codetour.changeTourTitle","when":"viewItem =~ /^codetour.tour(.primary)?(.recording)?(.active)?$/","group":"change@1"},{"command":"codetour.changeTourDescription","when":"viewItem =~ /^codetour.tour(.primary)?(.recording)?(.active)?$/","group":"change@2"},{"command":"codetour.changeTourRef","when":"viewItem =~ /^codetour.tour(.primary)?(.recording)?(.active)?$/ && gitOpenRepositoryCount != 0","group":"change@3"},{"command":"codetour.makeTourPrimary","when":"viewItem =~ /^codetour.tour(.recording)?(.active)?$/","group":"edit@1"},{"command":"codetour.unmakeTourPrimary","when":"viewItem =~ /^codetour.tour.primary(.recording)?(.active)?$/","group":"edit@2"},{"command":"codetour.editTour","when":"viewItem =~ /^codetour.tour(.primary)?(.active)?$/","group":"edit@2"},{"command":"codetour.previewTour","when":"viewItem =~ /^codetour.tour(.primary)?.recording/","group":"edit@2"},{"command":"codetour.deleteTour","when":"viewItem =~ /^codetour.tour(.primary)?(.recording)?(.active)?$/","group":"edit@3"},{"command":"codetour.exportTour","when":"viewItem =~ /^codetour.tour(.primary)?(.active)?$/","group":"export@1"},{"command":"codetour.moveTourStepBack","when":"viewItem =~ /^codetour.tourStep.hasPrevious/","group":"inline@1"},{"command":"codetour.moveTourStepForward","when":"viewItem =~ /codetour.tourStep.*(.hasNext)/","group":"inline@2"},{"command":"codetour.moveTourStepBack","when":"viewItem =~ /^codetour.tourStep.hasPrevious/","group":"basic@1"},{"command":"codetour.moveTourStepForward","when":"viewItem =~ /codetour.tourStep.*(.hasNext)/","group":"basic@2"},{"command":"codetour.changeTourStepTitle","when":"viewItem =~ /^codetour.tourStep/","group":"change@1"},{"command":"codetour.addContentStep","when":"viewItem =~ /^codetour.tourStep/ && codetour:recording","group":"change@2"},{"command":"codetour.editTourAtStep","when":"viewItem =~ /^codetour.tourStep/ && !codetour:recording","group":"manage@1"},{"command":"codetour.deleteTourStep","when":"viewItem =~ /^codetour.tourStep/","group":"manage@2"}],"explorer/context":[{"command":"codetour.addDirectoryStep","when":"codetour:recording && explorerResourceIsFolder"}],"editor/context":[{"command":"codetour.addSelectionStep","when":"codetour:recording && editorHasSelection","group":"codetour@1"}]},"views":{"explorer":[{"id":"codetour.tours","name":"CodeTour","when":"workspaceFolderCount != 0 || codetour:inTour"}]},"viewsWelcome":[{"view":"codetour.tours","contents":"In order to create a guided walkthrough, you can begin recording a tour for the currently opened workspace ([Learn More](https://github.com/vsls-contrib/codetour#recording-tours)).\n\n[Record Tour](command:codetour.recordTour)\n\nYou can also open tours that were shared with you by others ([Learn More](https://github.com/vsls-contrib/codetour#opening-tours)).\n\n[Open Tour File](command:codetour.openTourFile)\n\n[Open Tour URL](command:codetour.openTourUrl)"}],"jsonValidation":[{"fileMatch":"*.tour","url":"./schema.json"}],"keybindings":[{"command":"codetour.previousTourStep","when":"codetour:inTour && !textInputFocus && !terminalFocus","key":"ctrl+left","mac":"cmd+left"},{"command":"codetour.nextTourStep","when":"codetour:inTour && !textInputFocus && !terminalFocus","key":"ctrl+right","mac":"cmd+right"},{"command":"codetour.endTour","when":"codetour:inTour && !textInputFocus && !terminalFocus","key":"ctrl+down ctrl+down","mac":"cmd+down cmd+down"},{"command":"codetour.startTour","when":"!textInputFocus && !terminalFocus","key":"ctrl+up ctrl+up","mac":"cmd+up cmd+up"}],"languages":[{"id":"json","extensions":[".tour"]}],"notebookProvider":[{"viewType":"codetour","displayName":"CodeTour","selector":[{"filenamePattern":"*.tour-notebook"}]}]},"dependencies":{"@types/jexl":"^2.2.0","axios":"^0.21.1","jexl":"^2.3.0","mobx":"^5.14.2","throttle-debounce":"^3.0.1","vsls":"^1.0.2532"},"devDependencies":{"@types/axios":"^0.14.0","@types/node":"^8.10.66","@types/throttle-debounce":"^2.1.0","@types/vscode":"^1.60.0","ts-loader":"^7.0.4","tslint":"^5.8.0","typescript":"^3.1.4","vsce":"^1.95.0","webpack":"^4.43.0","webpack-cli":"^3.3.11","webpack-merge":"^4.2.2"},"scripts":{"build":"webpack --mode production","vscode:prepublish":"npm run build","watch":"webpack --mode development --watch --info-verbosity verbose","package":"vsce package"},"prettier":{"arrowParens":"avoid","trailingComma":"none"}},"location":{"$mid":1,"path":"/workspace/.vscode-remote/extensions/vsls-contrib.codetour-0.0.59-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"vsls-contrib","metadata":{"installedTimestamp":1719174186121,"pinned":false,"source":"gallery","id":"1d9b1776-4188-4b43-b23f-bab3d47537e9","publisherId":"03b54342-c642-4e41-b84d-6a2222e2b060","publisherDisplayName":"vsls-contrib","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]}]}